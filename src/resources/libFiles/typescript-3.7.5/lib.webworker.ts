export default {
    fileName: `/lib.webworker.d.ts`,
    // File text is copyright Microsoft Corporation and is distributed under the Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)
    text: `/// <reference no-default-lib="true"/>\ninterface AddEventListenerOptions extends EventListenerOptions{once?:boolean;passive?:boolean;}interface AesCbcParams extends Algorithm{iv:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer;}interface AesCtrParams extends Algorithm{counter:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer;length:number;}interface AesDerivedKeyParams extends Algorithm{length:number;}interface AesGcmParams extends Algorithm{additionalData?:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer;iv:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer;tagLength?:number;}interface AesKeyAlgorithm extends KeyAlgorithm{length:number;}interface AesKeyGenParams extends Algorithm{length:number;}interface Algorithm{name:string;}interface BlobPropertyBag{endings?:EndingType;type?:string;}interface CacheQueryOptions{ignoreMethod?:boolean;ignoreSearch?:boolean;ignoreVary?:boolean;}interface CanvasRenderingContext2DSettings{alpha?:boolean;desynchronized?:boolean;}interface ClientQueryOptions{includeUncontrolled?:boolean;type?:ClientTypes;}interface CloseEventInit extends EventInit{code?:number;reason?:string;wasClean?:boolean;}interface CryptoKeyPair{privateKey?:CryptoKey;publicKey?:CryptoKey;}interface CustomEventInit<T=any>extends EventInit{detail?:T;}interface DOMMatrix2DInit{a?:number;b?:number;c?:number;d?:number;e?:number;f?:number;m11?:number;m12?:number;m21?:number;m22?:number;m41?:number;m42?:number;}interface DOMMatrixInit extends DOMMatrix2DInit{is2D?:boolean;m13?:number;m14?:number;m23?:number;m24?:number;m31?:number;m32?:number;m33?:number;m34?:number;m43?:number;m44?:number;}interface DOMPointInit{w?:number;x?:number;y?:number;z?:number;}interface DOMQuadInit{p1?:DOMPointInit;p2?:DOMPointInit;p3?:DOMPointInit;p4?:DOMPointInit;}interface DOMRectInit{height?:number;width?:number;x?:number;y?:number;}interface DevicePermissionDescriptor extends PermissionDescriptor{deviceId?:string;name:"camera"|"microphone"|"speaker";}interface EcKeyGenParams extends Algorithm{namedCurve:NamedCurve;}interface EcKeyImportParams extends Algorithm{namedCurve:NamedCurve;}interface EcdhKeyDeriveParams extends Algorithm{public:CryptoKey;}interface EcdsaParams extends Algorithm{hash:HashAlgorithmIdentifier;}interface ErrorEventInit extends EventInit{colno?:number;error?:any;filename?:string;lineno?:number;message?:string;}interface EventInit{bubbles?:boolean;cancelable?:boolean;composed?:boolean;}interface EventListenerOptions{capture?:boolean;}interface EventSourceInit{withCredentials?:boolean;}interface ExtendableEventInit extends EventInit{}interface ExtendableMessageEventInit extends ExtendableEventInit{data?:any;lastEventId?:string;origin?:string;ports?:MessagePort[];source?:Client|ServiceWorker|MessagePort|null;}interface FetchEventInit extends ExtendableEventInit{clientId?:string;preloadResponse?:Promise<any>;replacesClientId?:string;request:Request;resultingClientId?:string;}interface FilePropertyBag extends BlobPropertyBag{lastModified?:number;}interface GetNotificationOptions{tag?:string;}interface HmacImportParams extends Algorithm{hash:HashAlgorithmIdentifier;length?:number;}interface HmacKeyGenParams extends Algorithm{hash:HashAlgorithmIdentifier;length?:number;}interface IDBIndexParameters{multiEntry?:boolean;unique?:boolean;}interface IDBObjectStoreParameters{autoIncrement?:boolean;keyPath?:string|string[]|null;}interface IDBVersionChangeEventInit extends EventInit{newVersion?:number|null;oldVersion?:number;}interface ImageBitmapRenderingContextSettings{alpha?:boolean;}interface ImageEncodeOptions{quality?:number;type?:string;}interface JsonWebKey{alg?:string;crv?:string;d?:string;dp?:string;dq?:string;e?:string;ext?:boolean;k?:string;key_ops?:string[];kty?:string;n?:string;oth?:RsaOtherPrimesInfo[];p?:string;q?:string;qi?:string;use?:string;x?:string;y?:string;}interface KeyAlgorithm{name:string;}interface MessageEventInit extends EventInit{data?:any;lastEventId?:string;origin?:string;ports?:MessagePort[];source?:MessageEventSource|null;}interface MidiPermissionDescriptor extends PermissionDescriptor{name:"midi";sysex?:boolean;}interface MultiCacheQueryOptions extends CacheQueryOptions{cacheName?:string;}interface NavigationPreloadState{enabled?:boolean;headerValue?:string;}interface NotificationAction{action:string;icon?:string;title:string;}interface NotificationEventInit extends ExtendableEventInit{action?:string;notification:Notification;}interface NotificationOptions{actions?:NotificationAction[];badge?:string;body?:string;data?:any;dir?:NotificationDirection;icon?:string;image?:string;lang?:string;renotify?:boolean;requireInteraction?:boolean;silent?:boolean;tag?:string;timestamp?:number;vibrate?:VibratePattern;}interface Pbkdf2Params extends Algorithm{hash:HashAlgorithmIdentifier;iterations:number;salt:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer;}interface PerformanceObserverInit{buffered?:boolean;entryTypes?:string[];type?:string;}interface PermissionDescriptor{name:PermissionName;}interface PipeOptions{preventAbort?:boolean;preventCancel?:boolean;preventClose?:boolean;signal?:AbortSignal;}interface PostMessageOptions{transfer?:any[];}interface ProgressEventInit extends EventInit{lengthComputable?:boolean;loaded?:number;total?:number;}interface PromiseRejectionEventInit extends EventInit{promise:Promise<any>;reason?:any;}interface PushEventInit extends ExtendableEventInit{data?:PushMessageDataInit;}interface PushPermissionDescriptor extends PermissionDescriptor{name:"push";userVisibleOnly?:boolean;}interface PushSubscriptionChangeInit extends ExtendableEventInit{newSubscription?:PushSubscription;oldSubscription?:PushSubscription;}interface PushSubscriptionJSON{endpoint?:string;expirationTime?:number|null;keys?:Record<string,string>;}interface PushSubscriptionOptionsInit{applicationServerKey?:BufferSource|string|null;userVisibleOnly?:boolean;}interface QueuingStrategy<T=any>{highWaterMark?:number;size?:QueuingStrategySizeCallback<T>;}interface RegistrationOptions{scope?:string;type?:WorkerType;updateViaCache?:ServiceWorkerUpdateViaCache;}interface RequestInit{body?:BodyInit|null;cache?:RequestCache;credentials?:RequestCredentials;headers?:HeadersInit;integrity?:string;keepalive?:boolean;method?:string;mode?:RequestMode;redirect?:RequestRedirect;referrer?:string;referrerPolicy?:ReferrerPolicy;signal?:AbortSignal|null;window?:any;}interface ResponseInit{headers?:HeadersInit;status?:number;statusText?:string;}interface RsaHashedImportParams extends Algorithm{hash:HashAlgorithmIdentifier;}interface RsaHashedKeyGenParams extends RsaKeyGenParams{hash:HashAlgorithmIdentifier;}interface RsaKeyGenParams extends Algorithm{modulusLength:number;publicExponent:BigInteger;}interface RsaOaepParams extends Algorithm{label?:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer;}interface RsaOtherPrimesInfo{d?:string;r?:string;t?:string;}interface RsaPssParams extends Algorithm{saltLength:number;}interface StorageEstimate{quota?:number;usage?:number;}interface SyncEventInit extends ExtendableEventInit{lastChance?:boolean;tag:string;}interface TextDecodeOptions{stream?:boolean;}interface TextDecoderOptions{fatal?:boolean;ignoreBOM?:boolean;}interface TextEncoderEncodeIntoResult{read?:number;written?:number;}interface Transformer<I=any,O=any>{flush?:TransformStreamDefaultControllerCallback<O>;readableType?:undefined;start?:TransformStreamDefaultControllerCallback<O>;transform?:TransformStreamDefaultControllerTransformCallback<I,O>;writableType?:undefined;}interface UnderlyingByteSource{autoAllocateChunkSize?:number;cancel?:ReadableStreamErrorCallback;pull?:ReadableByteStreamControllerCallback;start?:ReadableByteStreamControllerCallback;type:"bytes";}interface UnderlyingSink<W=any>{abort?:WritableStreamErrorCallback;close?:WritableStreamDefaultControllerCloseCallback;start?:WritableStreamDefaultControllerStartCallback;type?:undefined;write?:WritableStreamDefaultControllerWriteCallback<W>;}interface UnderlyingSource<R=any>{cancel?:ReadableStreamErrorCallback;pull?:ReadableStreamDefaultControllerCallback<R>;start?:ReadableStreamDefaultControllerCallback<R>;type?:undefined;}interface WebGLContextAttributes{alpha?:boolean;antialias?:boolean;depth?:boolean;desynchronized?:boolean;failIfMajorPerformanceCaveat?:boolean;powerPreference?:WebGLPowerPreference;premultipliedAlpha?:boolean;preserveDrawingBuffer?:boolean;stencil?:boolean;}interface WebGLContextEventInit extends EventInit{statusMessage?:string;}interface WorkerOptions{credentials?:RequestCredentials;name?:string;type?:WorkerType;}interface EventListener{(evt:Event):void;}interface ANGLE_instanced_arrays{drawArraysInstancedANGLE(mode:GLenum,first:GLint,count:GLsizei,primcount:GLsizei):void;drawElementsInstancedANGLE(mode:GLenum,count:GLsizei,type:GLenum,offset:GLintptr,primcount:GLsizei):void;vertexAttribDivisorANGLE(index:GLuint,divisor:GLuint):void;readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE:GLenum;}interface AbortController{readonly signal:AbortSignal;abort():void;}declare var AbortController:{prototype:AbortController;new():AbortController;};interface AbortSignalEventMap{"abort":Event;}interface AbortSignal extends EventTarget{readonly aborted:boolean;onabort:((this:AbortSignal,ev:Event)=>any)|null;addEventListener<K extends keyof AbortSignalEventMap>(type:K,listener:(this:AbortSignal,ev:AbortSignalEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof AbortSignalEventMap>(type:K,listener:(this:AbortSignal,ev:AbortSignalEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var AbortSignal:{prototype:AbortSignal;new():AbortSignal;};interface AbstractWorkerEventMap{"error":ErrorEvent;}interface AbstractWorker{onerror:((this:AbstractWorker,ev:ErrorEvent)=>any)|null;addEventListener<K extends keyof AbstractWorkerEventMap>(type:K,listener:(this:AbstractWorker,ev:AbstractWorkerEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof AbstractWorkerEventMap>(type:K,listener:(this:AbstractWorker,ev:AbstractWorkerEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}interface AesCfbParams extends Algorithm{iv:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer;}interface AesCmacParams extends Algorithm{length:number;}interface AnimationFrameProvider{cancelAnimationFrame(handle:number):void;requestAnimationFrame(callback:FrameRequestCallback):number;}interface Blob{readonly size:number;readonly type:string;slice(start?:number,end?:number,contentType?:string):Blob;}declare var Blob:{prototype:Blob;new(blobParts?:BlobPart[],options?:BlobPropertyBag):Blob;};interface Body{readonly body:ReadableStream<Uint8Array>|null;readonly bodyUsed:boolean;arrayBuffer():Promise<ArrayBuffer>;blob():Promise<Blob>;formData():Promise<FormData>;json():Promise<any>;text():Promise<string>;}interface BroadcastChannelEventMap{"message":MessageEvent;"messageerror":MessageEvent;}interface BroadcastChannel extends EventTarget{readonly name:string;onmessage:((this:BroadcastChannel,ev:MessageEvent)=>any)|null;onmessageerror:((this:BroadcastChannel,ev:MessageEvent)=>any)|null;close():void;postMessage(message:any):void;addEventListener<K extends keyof BroadcastChannelEventMap>(type:K,listener:(this:BroadcastChannel,ev:BroadcastChannelEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof BroadcastChannelEventMap>(type:K,listener:(this:BroadcastChannel,ev:BroadcastChannelEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var BroadcastChannel:{prototype:BroadcastChannel;new(name:string):BroadcastChannel;};interface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView>{highWaterMark:number;size(chunk:ArrayBufferView):number;}declare var ByteLengthQueuingStrategy:{prototype:ByteLengthQueuingStrategy;new(options:{highWaterMark:number}):ByteLengthQueuingStrategy;};interface Cache{add(request:RequestInfo):Promise<void>;addAll(requests:RequestInfo[]):Promise<void>;delete(request:RequestInfo,options?:CacheQueryOptions):Promise<boolean>;keys(request?:RequestInfo,options?:CacheQueryOptions):Promise<ReadonlyArray<Request>>;match(request:RequestInfo,options?:CacheQueryOptions):Promise<Response|undefined>;matchAll(request?:RequestInfo,options?:CacheQueryOptions):Promise<ReadonlyArray<Response>>;put(request:RequestInfo,response:Response):Promise<void>;}declare var Cache:{prototype:Cache;new():Cache;};interface CacheStorage{delete(cacheName:string):Promise<boolean>;has(cacheName:string):Promise<boolean>;keys():Promise<string[]>;match(request:RequestInfo,options?:CacheQueryOptions):Promise<Response|undefined>;open(cacheName:string):Promise<Cache>;}declare var CacheStorage:{prototype:CacheStorage;new():CacheStorage;};interface CanvasCompositing{globalAlpha:number;globalCompositeOperation:string;}interface CanvasDrawImage{drawImage(image:CanvasImageSource,dx:number,dy:number):void;drawImage(image:CanvasImageSource,dx:number,dy:number,dw:number,dh:number):void;drawImage(image:CanvasImageSource,sx:number,sy:number,sw:number,sh:number,dx:number,dy:number,dw:number,dh:number):void;}interface CanvasDrawPath{beginPath():void;clip(fillRule?:CanvasFillRule):void;clip(path:Path2D,fillRule?:CanvasFillRule):void;fill(fillRule?:CanvasFillRule):void;fill(path:Path2D,fillRule?:CanvasFillRule):void;isPointInPath(x:number,y:number,fillRule?:CanvasFillRule):boolean;isPointInPath(path:Path2D,x:number,y:number,fillRule?:CanvasFillRule):boolean;isPointInStroke(x:number,y:number):boolean;isPointInStroke(path:Path2D,x:number,y:number):boolean;stroke():void;stroke(path:Path2D):void;}interface CanvasFillStrokeStyles{fillStyle:string|CanvasGradient|CanvasPattern;strokeStyle:string|CanvasGradient|CanvasPattern;createLinearGradient(x0:number,y0:number,x1:number,y1:number):CanvasGradient;createPattern(image:CanvasImageSource,repetition:string):CanvasPattern|null;createRadialGradient(x0:number,y0:number,r0:number,x1:number,y1:number,r1:number):CanvasGradient;}interface CanvasFilters{filter:string;}interface CanvasGradient{addColorStop(offset:number,color:string):void;}declare var CanvasGradient:{prototype:CanvasGradient;new():CanvasGradient;};interface CanvasImageData{createImageData(sw:number,sh:number):ImageData;createImageData(imagedata:ImageData):ImageData;getImageData(sx:number,sy:number,sw:number,sh:number):ImageData;putImageData(imagedata:ImageData,dx:number,dy:number):void;putImageData(imagedata:ImageData,dx:number,dy:number,dirtyX:number,dirtyY:number,dirtyWidth:number,dirtyHeight:number):void;}interface CanvasImageSmoothing{imageSmoothingEnabled:boolean;imageSmoothingQuality:ImageSmoothingQuality;}interface CanvasPath{arc(x:number,y:number,radius:number,startAngle:number,endAngle:number,anticlockwise?:boolean):void;arcTo(x1:number,y1:number,x2:number,y2:number,radius:number):void;bezierCurveTo(cp1x:number,cp1y:number,cp2x:number,cp2y:number,x:number,y:number):void;closePath():void;ellipse(x:number,y:number,radiusX:number,radiusY:number,rotation:number,startAngle:number,endAngle:number,anticlockwise?:boolean):void;lineTo(x:number,y:number):void;moveTo(x:number,y:number):void;quadraticCurveTo(cpx:number,cpy:number,x:number,y:number):void;rect(x:number,y:number,w:number,h:number):void;}interface CanvasPathDrawingStyles{lineCap:CanvasLineCap;lineDashOffset:number;lineJoin:CanvasLineJoin;lineWidth:number;miterLimit:number;getLineDash():number[];setLineDash(segments:number[]):void;}interface CanvasPattern{setTransform(transform?:DOMMatrix2DInit):void;}declare var CanvasPattern:{prototype:CanvasPattern;new():CanvasPattern;};interface CanvasRect{clearRect(x:number,y:number,w:number,h:number):void;fillRect(x:number,y:number,w:number,h:number):void;strokeRect(x:number,y:number,w:number,h:number):void;}interface CanvasShadowStyles{shadowBlur:number;shadowColor:string;shadowOffsetX:number;shadowOffsetY:number;}interface CanvasState{restore():void;save():void;}interface CanvasText{fillText(text:string,x:number,y:number,maxWidth?:number):void;measureText(text:string):TextMetrics;strokeText(text:string,x:number,y:number,maxWidth?:number):void;}interface CanvasTextDrawingStyles{direction:CanvasDirection;font:string;textAlign:CanvasTextAlign;textBaseline:CanvasTextBaseline;}interface CanvasTransform{getTransform():DOMMatrix;resetTransform():void;rotate(angle:number):void;scale(x:number,y:number):void;setTransform(a:number,b:number,c:number,d:number,e:number,f:number):void;setTransform(transform?:DOMMatrix2DInit):void;transform(a:number,b:number,c:number,d:number,e:number,f:number):void;translate(x:number,y:number):void;}interface Client{readonly frameType:FrameType;readonly id:string;readonly type:ClientTypes;readonly url:string;postMessage(message:any,transfer?:Transferable[]):void;}declare var Client:{prototype:Client;new():Client;};interface Clients{claim():Promise<void>;get(id:string):Promise<any>;matchAll(options?:ClientQueryOptions):Promise<ReadonlyArray<Client>>;openWindow(url:string):Promise<WindowClient|null>;}declare var Clients:{prototype:Clients;new():Clients;};interface CloseEvent extends Event{readonly code:number;readonly reason:string;readonly wasClean:boolean;initCloseEvent(typeArg:string,canBubbleArg:boolean,cancelableArg:boolean,wasCleanArg:boolean,codeArg:number,reasonArg:string):void;}declare var CloseEvent:{prototype:CloseEvent;new(type:string,eventInitDict?:CloseEventInit):CloseEvent;};interface ConcatParams extends Algorithm{algorithmId:Uint8Array;hash?:string|Algorithm;partyUInfo:Uint8Array;partyVInfo:Uint8Array;privateInfo?:Uint8Array;publicInfo?:Uint8Array;}interface Console{memory:any;assert(condition?:boolean,message?:string,...data:any[]):void;clear():void;count(label?:string):void;debug(message?:any,...optionalParams:any[]):void;dir(value?:any,...optionalParams:any[]):void;dirxml(value:any):void;error(message?:any,...optionalParams:any[]):void;exception(message?:string,...optionalParams:any[]):void;group(groupTitle?:string,...optionalParams:any[]):void;groupCollapsed(groupTitle?:string,...optionalParams:any[]):void;groupEnd():void;info(message?:any,...optionalParams:any[]):void;log(message?:any,...optionalParams:any[]):void;markTimeline(label?:string):void;profile(reportName?:string):void;profileEnd(reportName?:string):void;table(...tabularData:any[]):void;time(label?:string):void;timeEnd(label?:string):void;timeStamp(label?:string):void;timeline(label?:string):void;timelineEnd(label?:string):void;trace(message?:any,...optionalParams:any[]):void;warn(message?:any,...optionalParams:any[]):void;}declare var Console:{prototype:Console;new():Console;};interface CountQueuingStrategy extends QueuingStrategy{highWaterMark:number;size(chunk:any):1;}declare var CountQueuingStrategy:{prototype:CountQueuingStrategy;new(options:{highWaterMark:number}):CountQueuingStrategy;};interface Crypto{readonly subtle:SubtleCrypto;getRandomValues<T extends Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|null>(array:T):T;}declare var Crypto:{prototype:Crypto;new():Crypto;};interface CryptoKey{readonly algorithm:KeyAlgorithm;readonly extractable:boolean;readonly type:KeyType;readonly usages:KeyUsage[];}declare var CryptoKey:{prototype:CryptoKey;new():CryptoKey;};interface CustomEvent<T=any>extends Event{readonly detail:T;initCustomEvent(typeArg:string,canBubbleArg:boolean,cancelableArg:boolean,detailArg:T):void;}declare var CustomEvent:{prototype:CustomEvent;new<T>(typeArg:string,eventInitDict?:CustomEventInit<T>):CustomEvent<T>;};interface DOMException{readonly code:number;readonly message:string;readonly name:string;readonly ABORT_ERR:number;readonly DATA_CLONE_ERR:number;readonly DOMSTRING_SIZE_ERR:number;readonly HIERARCHY_REQUEST_ERR:number;readonly INDEX_SIZE_ERR:number;readonly INUSE_ATTRIBUTE_ERR:number;readonly INVALID_ACCESS_ERR:number;readonly INVALID_CHARACTER_ERR:number;readonly INVALID_MODIFICATION_ERR:number;readonly INVALID_NODE_TYPE_ERR:number;readonly INVALID_STATE_ERR:number;readonly NAMESPACE_ERR:number;readonly NETWORK_ERR:number;readonly NOT_FOUND_ERR:number;readonly NOT_SUPPORTED_ERR:number;readonly NO_DATA_ALLOWED_ERR:number;readonly NO_MODIFICATION_ALLOWED_ERR:number;readonly QUOTA_EXCEEDED_ERR:number;readonly SECURITY_ERR:number;readonly SYNTAX_ERR:number;readonly TIMEOUT_ERR:number;readonly TYPE_MISMATCH_ERR:number;readonly URL_MISMATCH_ERR:number;readonly VALIDATION_ERR:number;readonly WRONG_DOCUMENT_ERR:number;}declare var DOMException:{prototype:DOMException;new(message?:string,name?:string):DOMException;readonly ABORT_ERR:number;readonly DATA_CLONE_ERR:number;readonly DOMSTRING_SIZE_ERR:number;readonly HIERARCHY_REQUEST_ERR:number;readonly INDEX_SIZE_ERR:number;readonly INUSE_ATTRIBUTE_ERR:number;readonly INVALID_ACCESS_ERR:number;readonly INVALID_CHARACTER_ERR:number;readonly INVALID_MODIFICATION_ERR:number;readonly INVALID_NODE_TYPE_ERR:number;readonly INVALID_STATE_ERR:number;readonly NAMESPACE_ERR:number;readonly NETWORK_ERR:number;readonly NOT_FOUND_ERR:number;readonly NOT_SUPPORTED_ERR:number;readonly NO_DATA_ALLOWED_ERR:number;readonly NO_MODIFICATION_ALLOWED_ERR:number;readonly QUOTA_EXCEEDED_ERR:number;readonly SECURITY_ERR:number;readonly SYNTAX_ERR:number;readonly TIMEOUT_ERR:number;readonly TYPE_MISMATCH_ERR:number;readonly URL_MISMATCH_ERR:number;readonly VALIDATION_ERR:number;readonly WRONG_DOCUMENT_ERR:number;};interface DOMMatrix extends DOMMatrixReadOnly{a:number;b:number;c:number;d:number;e:number;f:number;m11:number;m12:number;m13:number;m14:number;m21:number;m22:number;m23:number;m24:number;m31:number;m32:number;m33:number;m34:number;m41:number;m42:number;m43:number;m44:number;invertSelf():DOMMatrix;multiplySelf(other?:DOMMatrixInit):DOMMatrix;preMultiplySelf(other?:DOMMatrixInit):DOMMatrix;rotateAxisAngleSelf(x?:number,y?:number,z?:number,angle?:number):DOMMatrix;rotateFromVectorSelf(x?:number,y?:number):DOMMatrix;rotateSelf(rotX?:number,rotY?:number,rotZ?:number):DOMMatrix;scale3dSelf(scale?:number,originX?:number,originY?:number,originZ?:number):DOMMatrix;scaleSelf(scaleX?:number,scaleY?:number,scaleZ?:number,originX?:number,originY?:number,originZ?:number):DOMMatrix;skewXSelf(sx?:number):DOMMatrix;skewYSelf(sy?:number):DOMMatrix;translateSelf(tx?:number,ty?:number,tz?:number):DOMMatrix;}declare var DOMMatrix:{prototype:DOMMatrix;new(init?:string|number[]):DOMMatrix;fromFloat32Array(array32:Float32Array):DOMMatrix;fromFloat64Array(array64:Float64Array):DOMMatrix;fromMatrix(other?:DOMMatrixInit):DOMMatrix;};interface DOMMatrixReadOnly{readonly a:number;readonly b:number;readonly c:number;readonly d:number;readonly e:number;readonly f:number;readonly is2D:boolean;readonly isIdentity:boolean;readonly m11:number;readonly m12:number;readonly m13:number;readonly m14:number;readonly m21:number;readonly m22:number;readonly m23:number;readonly m24:number;readonly m31:number;readonly m32:number;readonly m33:number;readonly m34:number;readonly m41:number;readonly m42:number;readonly m43:number;readonly m44:number;flipX():DOMMatrix;flipY():DOMMatrix;inverse():DOMMatrix;multiply(other?:DOMMatrixInit):DOMMatrix;rotate(rotX?:number,rotY?:number,rotZ?:number):DOMMatrix;rotateAxisAngle(x?:number,y?:number,z?:number,angle?:number):DOMMatrix;rotateFromVector(x?:number,y?:number):DOMMatrix;scale(scaleX?:number,scaleY?:number,scaleZ?:number,originX?:number,originY?:number,originZ?:number):DOMMatrix;scale3d(scale?:number,originX?:number,originY?:number,originZ?:number):DOMMatrix;scaleNonUniform(scaleX?:number,scaleY?:number):DOMMatrix;skewX(sx?:number):DOMMatrix;skewY(sy?:number):DOMMatrix;toFloat32Array():Float32Array;toFloat64Array():Float64Array;toJSON():any;transformPoint(point?:DOMPointInit):DOMPoint;translate(tx?:number,ty?:number,tz?:number):DOMMatrix;}declare var DOMMatrixReadOnly:{prototype:DOMMatrixReadOnly;new(init?:string|number[]):DOMMatrixReadOnly;fromFloat32Array(array32:Float32Array):DOMMatrixReadOnly;fromFloat64Array(array64:Float64Array):DOMMatrixReadOnly;fromMatrix(other?:DOMMatrixInit):DOMMatrixReadOnly;};interface DOMPoint extends DOMPointReadOnly{w:number;x:number;y:number;z:number;}declare var DOMPoint:{prototype:DOMPoint;new(x?:number,y?:number,z?:number,w?:number):DOMPoint;fromPoint(other?:DOMPointInit):DOMPoint;};interface DOMPointReadOnly{readonly w:number;readonly x:number;readonly y:number;readonly z:number;matrixTransform(matrix?:DOMMatrixInit):DOMPoint;toJSON():any;}declare var DOMPointReadOnly:{prototype:DOMPointReadOnly;new(x?:number,y?:number,z?:number,w?:number):DOMPointReadOnly;fromPoint(other?:DOMPointInit):DOMPointReadOnly;};interface DOMQuad{readonly p1:DOMPoint;readonly p2:DOMPoint;readonly p3:DOMPoint;readonly p4:DOMPoint;getBounds():DOMRect;toJSON():any;}declare var DOMQuad:{prototype:DOMQuad;new(p1?:DOMPointInit,p2?:DOMPointInit,p3?:DOMPointInit,p4?:DOMPointInit):DOMQuad;fromQuad(other?:DOMQuadInit):DOMQuad;fromRect(other?:DOMRectInit):DOMQuad;};interface DOMRect extends DOMRectReadOnly{height:number;width:number;x:number;y:number;}declare var DOMRect:{prototype:DOMRect;new(x?:number,y?:number,width?:number,height?:number):DOMRect;fromRect(other?:DOMRectInit):DOMRect;};interface DOMRectReadOnly{readonly bottom:number;readonly height:number;readonly left:number;readonly right:number;readonly top:number;readonly width:number;readonly x:number;readonly y:number;toJSON():any;}declare var DOMRectReadOnly:{prototype:DOMRectReadOnly;new(x?:number,y?:number,width?:number,height?:number):DOMRectReadOnly;fromRect(other?:DOMRectInit):DOMRectReadOnly;};interface DOMStringList{readonly length:number;contains(string:string):boolean;item(index:number):string|null;[index:number]:string;}declare var DOMStringList:{prototype:DOMStringList;new():DOMStringList;};interface DedicatedWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap{"message":MessageEvent;}interface DedicatedWorkerGlobalScope extends WorkerGlobalScope,AnimationFrameProvider{onmessage:((this:DedicatedWorkerGlobalScope,ev:MessageEvent)=>any)|null;close():void;postMessage(message:any,transfer:Transferable[]):void;postMessage(message:any,options?:PostMessageOptions):void;addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type:K,listener:(this:DedicatedWorkerGlobalScope,ev:DedicatedWorkerGlobalScopeEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type:K,listener:(this:DedicatedWorkerGlobalScope,ev:DedicatedWorkerGlobalScopeEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var DedicatedWorkerGlobalScope:{prototype:DedicatedWorkerGlobalScope;new():DedicatedWorkerGlobalScope;};interface DhImportKeyParams extends Algorithm{generator:Uint8Array;prime:Uint8Array;}interface DhKeyAlgorithm extends KeyAlgorithm{generator:Uint8Array;prime:Uint8Array;}interface DhKeyDeriveParams extends Algorithm{public:CryptoKey;}interface DhKeyGenParams extends Algorithm{generator:Uint8Array;prime:Uint8Array;}interface EXT_blend_minmax{readonly MAX_EXT:GLenum;readonly MIN_EXT:GLenum;}interface EXT_frag_depth{}interface EXT_sRGB{readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT:GLenum;readonly SRGB8_ALPHA8_EXT:GLenum;readonly SRGB_ALPHA_EXT:GLenum;readonly SRGB_EXT:GLenum;}interface EXT_shader_texture_lod{}interface EXT_texture_filter_anisotropic{readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT:GLenum;readonly TEXTURE_MAX_ANISOTROPY_EXT:GLenum;}interface ErrorEvent extends Event{readonly colno:number;readonly error:any;readonly filename:string;readonly lineno:number;readonly message:string;}declare var ErrorEvent:{prototype:ErrorEvent;new(type:string,eventInitDict?:ErrorEventInit):ErrorEvent;};interface Event{readonly bubbles:boolean;cancelBubble:boolean;readonly cancelable:boolean;readonly composed:boolean;readonly currentTarget:EventTarget|null;readonly defaultPrevented:boolean;readonly eventPhase:number;readonly isTrusted:boolean;returnValue:boolean;readonly srcElement:EventTarget|null;readonly target:EventTarget|null;readonly timeStamp:number;readonly type:string;composedPath():EventTarget[];initEvent(type:string,bubbles?:boolean,cancelable?:boolean):void;preventDefault():void;stopImmediatePropagation():void;stopPropagation():void;readonly AT_TARGET:number;readonly BUBBLING_PHASE:number;readonly CAPTURING_PHASE:number;readonly NONE:number;}declare var Event:{prototype:Event;new(type:string,eventInitDict?:EventInit):Event;readonly AT_TARGET:number;readonly BUBBLING_PHASE:number;readonly CAPTURING_PHASE:number;readonly NONE:number;};interface EventListenerObject{handleEvent(evt:Event):void;}interface EventSourceEventMap{"error":Event;"message":MessageEvent;"open":Event;}interface EventSource extends EventTarget{onerror:((this:EventSource,ev:Event)=>any)|null;onmessage:((this:EventSource,ev:MessageEvent)=>any)|null;onopen:((this:EventSource,ev:Event)=>any)|null;readonly readyState:number;readonly url:string;readonly withCredentials:boolean;close():void;readonly CLOSED:number;readonly CONNECTING:number;readonly OPEN:number;addEventListener<K extends keyof EventSourceEventMap>(type:K,listener:(this:EventSource,ev:EventSourceEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof EventSourceEventMap>(type:K,listener:(this:EventSource,ev:EventSourceEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var EventSource:{prototype:EventSource;new(url:string,eventSourceInitDict?:EventSourceInit):EventSource;readonly CLOSED:number;readonly CONNECTING:number;readonly OPEN:number;};interface EventTarget{addEventListener(type:string,listener:EventListenerOrEventListenerObject|null,options?:boolean|AddEventListenerOptions):void;dispatchEvent(event:Event):boolean;removeEventListener(type:string,callback:EventListenerOrEventListenerObject|null,options?:EventListenerOptions|boolean):void;}declare var EventTarget:{prototype:EventTarget;new():EventTarget;};interface ExtendableEvent extends Event{waitUntil(f:any):void;}declare var ExtendableEvent:{prototype:ExtendableEvent;new(type:string,eventInitDict?:ExtendableEventInit):ExtendableEvent;};interface ExtendableMessageEvent extends ExtendableEvent{readonly data:any;readonly lastEventId:string;readonly origin:string;readonly ports:ReadonlyArray<MessagePort>;readonly source:Client|ServiceWorker|MessagePort|null;}declare var ExtendableMessageEvent:{prototype:ExtendableMessageEvent;new(type:string,eventInitDict?:ExtendableMessageEventInit):ExtendableMessageEvent;};interface FetchEvent extends ExtendableEvent{readonly clientId:string;readonly preloadResponse:Promise<any>;readonly replacesClientId:string;readonly request:Request;readonly resultingClientId:string;respondWith(r:Response|Promise<Response>):void;}declare var FetchEvent:{prototype:FetchEvent;new(type:string,eventInitDict:FetchEventInit):FetchEvent;};interface File extends Blob{readonly lastModified:number;readonly name:string;}declare var File:{prototype:File;new(fileBits:BlobPart[],fileName:string,options?:FilePropertyBag):File;};interface FileList{readonly length:number;item(index:number):File|null;[index:number]:File;}declare var FileList:{prototype:FileList;new():FileList;};interface FileReaderEventMap{"abort":ProgressEvent<FileReader>;"error":ProgressEvent<FileReader>;"load":ProgressEvent<FileReader>;"loadend":ProgressEvent<FileReader>;"loadstart":ProgressEvent<FileReader>;"progress":ProgressEvent<FileReader>;}interface FileReader extends EventTarget{readonly error:DOMException|null;onabort:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;onerror:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;onload:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;onloadend:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;onloadstart:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;onprogress:((this:FileReader,ev:ProgressEvent<FileReader>)=>any)|null;readonly readyState:number;readonly result:string|ArrayBuffer|null;abort():void;readAsArrayBuffer(blob:Blob):void;readAsBinaryString(blob:Blob):void;readAsDataURL(blob:Blob):void;readAsText(blob:Blob,encoding?:string):void;readonly DONE:number;readonly EMPTY:number;readonly LOADING:number;addEventListener<K extends keyof FileReaderEventMap>(type:K,listener:(this:FileReader,ev:FileReaderEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof FileReaderEventMap>(type:K,listener:(this:FileReader,ev:FileReaderEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var FileReader:{prototype:FileReader;new():FileReader;readonly DONE:number;readonly EMPTY:number;readonly LOADING:number;};interface FileReaderSync{readAsArrayBuffer(blob:Blob):ArrayBuffer;readAsBinaryString(blob:Blob):string;readAsDataURL(blob:Blob):string;readAsText(blob:Blob,encoding?:string):string;}declare var FileReaderSync:{prototype:FileReaderSync;new():FileReaderSync;};interface FormData{append(name:string,value:string|Blob,fileName?:string):void;delete(name:string):void;get(name:string):FormDataEntryValue|null;getAll(name:string):FormDataEntryValue[];has(name:string):boolean;set(name:string,value:string|Blob,fileName?:string):void;forEach(callbackfn:(value:FormDataEntryValue,key:string,parent:FormData)=>void,thisArg?:any):void;}declare var FormData:{prototype:FormData;new():FormData;};interface GenericTransformStream{readonly readable:ReadableStream;readonly writable:WritableStream;}interface Headers{append(name:string,value:string):void;delete(name:string):void;get(name:string):string|null;has(name:string):boolean;set(name:string,value:string):void;forEach(callbackfn:(value:string,key:string,parent:Headers)=>void,thisArg?:any):void;}declare var Headers:{prototype:Headers;new(init?:HeadersInit):Headers;};interface HkdfCtrParams extends Algorithm{context:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer;hash:string|Algorithm;label:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer;}interface IDBArrayKey extends Array<IDBValidKey>{}interface IDBCursor{readonly direction:IDBCursorDirection;readonly key:IDBValidKey;readonly primaryKey:IDBValidKey;readonly source:IDBObjectStore|IDBIndex;advance(count:number):void;continue(key?:IDBValidKey):void;continuePrimaryKey(key:IDBValidKey,primaryKey:IDBValidKey):void;delete():IDBRequest<undefined>;update(value:any):IDBRequest<IDBValidKey>;}declare var IDBCursor:{prototype:IDBCursor;new():IDBCursor;};interface IDBCursorWithValue extends IDBCursor{readonly value:any;}declare var IDBCursorWithValue:{prototype:IDBCursorWithValue;new():IDBCursorWithValue;};interface IDBDatabaseEventMap{"abort":Event;"close":Event;"error":Event;"versionchange":IDBVersionChangeEvent;}interface IDBDatabase extends EventTarget{readonly name:string;readonly objectStoreNames:DOMStringList;onabort:((this:IDBDatabase,ev:Event)=>any)|null;onclose:((this:IDBDatabase,ev:Event)=>any)|null;onerror:((this:IDBDatabase,ev:Event)=>any)|null;onversionchange:((this:IDBDatabase,ev:IDBVersionChangeEvent)=>any)|null;readonly version:number;close():void;createObjectStore(name:string,optionalParameters?:IDBObjectStoreParameters):IDBObjectStore;deleteObjectStore(name:string):void;transaction(storeNames:string|string[],mode?:IDBTransactionMode):IDBTransaction;addEventListener<K extends keyof IDBDatabaseEventMap>(type:K,listener:(this:IDBDatabase,ev:IDBDatabaseEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof IDBDatabaseEventMap>(type:K,listener:(this:IDBDatabase,ev:IDBDatabaseEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var IDBDatabase:{prototype:IDBDatabase;new():IDBDatabase;};interface IDBFactory{cmp(first:any,second:any):number;deleteDatabase(name:string):IDBOpenDBRequest;open(name:string,version?:number):IDBOpenDBRequest;}declare var IDBFactory:{prototype:IDBFactory;new():IDBFactory;};interface IDBIndex{readonly keyPath:string|string[];readonly multiEntry:boolean;name:string;readonly objectStore:IDBObjectStore;readonly unique:boolean;count(key?:IDBValidKey|IDBKeyRange):IDBRequest<number>;get(key:IDBValidKey|IDBKeyRange):IDBRequest<any|undefined>;getAll(query?:IDBValidKey|IDBKeyRange|null,count?:number):IDBRequest<any[]>;getAllKeys(query?:IDBValidKey|IDBKeyRange|null,count?:number):IDBRequest<IDBValidKey[]>;getKey(key:IDBValidKey|IDBKeyRange):IDBRequest<IDBValidKey|undefined>;openCursor(query?:IDBValidKey|IDBKeyRange|null,direction?:IDBCursorDirection):IDBRequest<IDBCursorWithValue|null>;openKeyCursor(query?:IDBValidKey|IDBKeyRange|null,direction?:IDBCursorDirection):IDBRequest<IDBCursor|null>;}declare var IDBIndex:{prototype:IDBIndex;new():IDBIndex;};interface IDBKeyRange{readonly lower:any;readonly lowerOpen:boolean;readonly upper:any;readonly upperOpen:boolean;includes(key:any):boolean;}declare var IDBKeyRange:{prototype:IDBKeyRange;new():IDBKeyRange;bound(lower:any,upper:any,lowerOpen?:boolean,upperOpen?:boolean):IDBKeyRange;lowerBound(lower:any,open?:boolean):IDBKeyRange;only(value:any):IDBKeyRange;upperBound(upper:any,open?:boolean):IDBKeyRange;};interface IDBObjectStore{readonly autoIncrement:boolean;readonly indexNames:DOMStringList;readonly keyPath:string|string[];name:string;readonly transaction:IDBTransaction;add(value:any,key?:IDBValidKey):IDBRequest<IDBValidKey>;clear():IDBRequest<undefined>;count(key?:IDBValidKey|IDBKeyRange):IDBRequest<number>;createIndex(name:string,keyPath:string|string[],options?:IDBIndexParameters):IDBIndex;delete(key:IDBValidKey|IDBKeyRange):IDBRequest<undefined>;deleteIndex(name:string):void;get(query:IDBValidKey|IDBKeyRange):IDBRequest<any|undefined>;getAll(query?:IDBValidKey|IDBKeyRange|null,count?:number):IDBRequest<any[]>;getAllKeys(query?:IDBValidKey|IDBKeyRange|null,count?:number):IDBRequest<IDBValidKey[]>;getKey(query:IDBValidKey|IDBKeyRange):IDBRequest<IDBValidKey|undefined>;index(name:string):IDBIndex;openCursor(query?:IDBValidKey|IDBKeyRange|null,direction?:IDBCursorDirection):IDBRequest<IDBCursorWithValue|null>;openKeyCursor(query?:IDBValidKey|IDBKeyRange|null,direction?:IDBCursorDirection):IDBRequest<IDBCursor|null>;put(value:any,key?:IDBValidKey):IDBRequest<IDBValidKey>;}declare var IDBObjectStore:{prototype:IDBObjectStore;new():IDBObjectStore;};interface IDBOpenDBRequestEventMap extends IDBRequestEventMap{"blocked":Event;"upgradeneeded":IDBVersionChangeEvent;}interface IDBOpenDBRequest extends IDBRequest<IDBDatabase>{onblocked:((this:IDBOpenDBRequest,ev:Event)=>any)|null;onupgradeneeded:((this:IDBOpenDBRequest,ev:IDBVersionChangeEvent)=>any)|null;addEventListener<K extends keyof IDBOpenDBRequestEventMap>(type:K,listener:(this:IDBOpenDBRequest,ev:IDBOpenDBRequestEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(type:K,listener:(this:IDBOpenDBRequest,ev:IDBOpenDBRequestEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var IDBOpenDBRequest:{prototype:IDBOpenDBRequest;new():IDBOpenDBRequest;};interface IDBRequestEventMap{"error":Event;"success":Event;}interface IDBRequest<T=any>extends EventTarget{readonly error:DOMException|null;onerror:((this:IDBRequest<T>,ev:Event)=>any)|null;onsuccess:((this:IDBRequest<T>,ev:Event)=>any)|null;readonly readyState:IDBRequestReadyState;readonly result:T;readonly source:IDBObjectStore|IDBIndex|IDBCursor;readonly transaction:IDBTransaction|null;addEventListener<K extends keyof IDBRequestEventMap>(type:K,listener:(this:IDBRequest<T>,ev:IDBRequestEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof IDBRequestEventMap>(type:K,listener:(this:IDBRequest<T>,ev:IDBRequestEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var IDBRequest:{prototype:IDBRequest;new():IDBRequest;};interface IDBTransactionEventMap{"abort":Event;"complete":Event;"error":Event;}interface IDBTransaction extends EventTarget{readonly db:IDBDatabase;readonly error:DOMException;readonly mode:IDBTransactionMode;readonly objectStoreNames:DOMStringList;onabort:((this:IDBTransaction,ev:Event)=>any)|null;oncomplete:((this:IDBTransaction,ev:Event)=>any)|null;onerror:((this:IDBTransaction,ev:Event)=>any)|null;abort():void;objectStore(name:string):IDBObjectStore;addEventListener<K extends keyof IDBTransactionEventMap>(type:K,listener:(this:IDBTransaction,ev:IDBTransactionEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof IDBTransactionEventMap>(type:K,listener:(this:IDBTransaction,ev:IDBTransactionEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var IDBTransaction:{prototype:IDBTransaction;new():IDBTransaction;};interface IDBVersionChangeEvent extends Event{readonly newVersion:number|null;readonly oldVersion:number;}declare var IDBVersionChangeEvent:{prototype:IDBVersionChangeEvent;new(type:string,eventInitDict?:IDBVersionChangeEventInit):IDBVersionChangeEvent;};interface ImageBitmap{readonly height:number;readonly width:number;close():void;}declare var ImageBitmap:{prototype:ImageBitmap;new():ImageBitmap;};interface ImageBitmapOptions{colorSpaceConversion?:"none"|"default";imageOrientation?:"none"|"flipY";premultiplyAlpha?:"none"|"premultiply"|"default";resizeHeight?:number;resizeQuality?:"pixelated"|"low"|"medium"|"high";resizeWidth?:number;}interface ImageBitmapRenderingContext{readonly canvas:OffscreenCanvas;transferFromImageBitmap(bitmap:ImageBitmap|null):void;}declare var ImageBitmapRenderingContext:{prototype:ImageBitmapRenderingContext;new():ImageBitmapRenderingContext;};interface ImageData{readonly data:Uint8ClampedArray;readonly height:number;readonly width:number;}declare var ImageData:{prototype:ImageData;new(width:number,height:number):ImageData;new(array:Uint8ClampedArray,width:number,height?:number):ImageData;};interface MessageChannel{readonly port1:MessagePort;readonly port2:MessagePort;}declare var MessageChannel:{prototype:MessageChannel;new():MessageChannel;};interface MessageEvent extends Event{readonly data:any;readonly lastEventId:string;readonly origin:string;readonly ports:ReadonlyArray<MessagePort>;readonly source:MessageEventSource|null;}declare var MessageEvent:{prototype:MessageEvent;new(type:string,eventInitDict?:MessageEventInit):MessageEvent;};interface MessagePortEventMap{"message":MessageEvent;"messageerror":MessageEvent;}interface MessagePort extends EventTarget{onmessage:((this:MessagePort,ev:MessageEvent)=>any)|null;onmessageerror:((this:MessagePort,ev:MessageEvent)=>any)|null;close():void;postMessage(message:any,transfer:Transferable[]):void;postMessage(message:any,options?:PostMessageOptions):void;start():void;addEventListener<K extends keyof MessagePortEventMap>(type:K,listener:(this:MessagePort,ev:MessagePortEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof MessagePortEventMap>(type:K,listener:(this:MessagePort,ev:MessagePortEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var MessagePort:{prototype:MessagePort;new():MessagePort;};interface NavigationPreloadManager{disable():Promise<void>;enable():Promise<void>;getState():Promise<NavigationPreloadState>;setHeaderValue(value:string):Promise<void>;}declare var NavigationPreloadManager:{prototype:NavigationPreloadManager;new():NavigationPreloadManager;};interface NavigatorBeacon{sendBeacon(url:string,data?:Blob|Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer|FormData|string|null):boolean;}interface NavigatorConcurrentHardware{readonly hardwareConcurrency:number;}interface NavigatorID{readonly appCodeName:string;readonly appName:string;readonly appVersion:string;readonly platform:string;readonly product:string;readonly userAgent:string;}interface NavigatorOnLine{readonly onLine:boolean;}interface NavigatorStorage{readonly storage:StorageManager;}interface NotificationEventMap{"click":Event;"close":Event;"error":Event;"show":Event;}interface Notification extends EventTarget{readonly actions:ReadonlyArray<NotificationAction>;readonly badge:string;readonly body:string;readonly data:any;readonly dir:NotificationDirection;readonly icon:string;readonly image:string;readonly lang:string;onclick:((this:Notification,ev:Event)=>any)|null;onclose:((this:Notification,ev:Event)=>any)|null;onerror:((this:Notification,ev:Event)=>any)|null;onshow:((this:Notification,ev:Event)=>any)|null;readonly renotify:boolean;readonly requireInteraction:boolean;readonly silent:boolean;readonly tag:string;readonly timestamp:number;readonly title:string;readonly vibrate:ReadonlyArray<number>;close():void;addEventListener<K extends keyof NotificationEventMap>(type:K,listener:(this:Notification,ev:NotificationEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof NotificationEventMap>(type:K,listener:(this:Notification,ev:NotificationEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var Notification:{prototype:Notification;new(title:string,options?:NotificationOptions):Notification;readonly maxActions:number;readonly permission:NotificationPermission;};interface NotificationEvent extends ExtendableEvent{readonly action:string;readonly notification:Notification;}declare var NotificationEvent:{prototype:NotificationEvent;new(type:string,eventInitDict:NotificationEventInit):NotificationEvent;};interface OES_element_index_uint{}interface OES_standard_derivatives{readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES:GLenum;}interface OES_texture_float{}interface OES_texture_float_linear{}interface OES_texture_half_float{readonly HALF_FLOAT_OES:GLenum;}interface OES_texture_half_float_linear{}interface OES_vertex_array_object{bindVertexArrayOES(arrayObject:WebGLVertexArrayObjectOES|null):void;createVertexArrayOES():WebGLVertexArrayObjectOES|null;deleteVertexArrayOES(arrayObject:WebGLVertexArrayObjectOES|null):void;isVertexArrayOES(arrayObject:WebGLVertexArrayObjectOES|null):GLboolean;readonly VERTEX_ARRAY_BINDING_OES:GLenum;}interface OffscreenCanvas extends EventTarget{height:number;width:number;convertToBlob(options?:ImageEncodeOptions):Promise<Blob>;getContext(contextId:"2d",options?:CanvasRenderingContext2DSettings):OffscreenCanvasRenderingContext2D|null;getContext(contextId:"bitmaprenderer",options?:ImageBitmapRenderingContextSettings):ImageBitmapRenderingContext|null;getContext(contextId:"webgl",options?:WebGLContextAttributes):WebGLRenderingContext|null;getContext(contextId:"webgl2",options?:WebGLContextAttributes):WebGL2RenderingContext|null;getContext(contextId:OffscreenRenderingContextId,options?:any):OffscreenRenderingContext|null;transferToImageBitmap():ImageBitmap;}declare var OffscreenCanvas:{prototype:OffscreenCanvas;new(width:number,height:number):OffscreenCanvas;};interface OffscreenCanvasRenderingContext2D extends CanvasCompositing,CanvasDrawImage,CanvasDrawPath,CanvasFillStrokeStyles,CanvasFilters,CanvasImageData,CanvasImageSmoothing,CanvasPath,CanvasPathDrawingStyles,CanvasRect,CanvasShadowStyles,CanvasState,CanvasText,CanvasTextDrawingStyles,CanvasTransform{readonly canvas:OffscreenCanvas;commit():void;}declare var OffscreenCanvasRenderingContext2D:{prototype:OffscreenCanvasRenderingContext2D;new():OffscreenCanvasRenderingContext2D;};interface Path2D extends CanvasPath{addPath(path:Path2D,transform?:DOMMatrix2DInit):void;}declare var Path2D:{prototype:Path2D;new(path?:Path2D|string):Path2D;};interface PerformanceEventMap{"resourcetimingbufferfull":Event;}interface Performance extends EventTarget{onresourcetimingbufferfull:((this:Performance,ev:Event)=>any)|null;readonly timeOrigin:number;clearMarks(markName?:string):void;clearMeasures(measureName?:string):void;clearResourceTimings():void;getEntries():PerformanceEntryList;getEntriesByName(name:string,type?:string):PerformanceEntryList;getEntriesByType(type:string):PerformanceEntryList;mark(markName:string):void;measure(measureName:string,startMark?:string,endMark?:string):void;now():number;setResourceTimingBufferSize(maxSize:number):void;toJSON():any;addEventListener<K extends keyof PerformanceEventMap>(type:K,listener:(this:Performance,ev:PerformanceEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof PerformanceEventMap>(type:K,listener:(this:Performance,ev:PerformanceEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var Performance:{prototype:Performance;new():Performance;};interface PerformanceEntry{readonly duration:number;readonly entryType:string;readonly name:string;readonly startTime:number;toJSON():any;}declare var PerformanceEntry:{prototype:PerformanceEntry;new():PerformanceEntry;};interface PerformanceMark extends PerformanceEntry{}declare var PerformanceMark:{prototype:PerformanceMark;new():PerformanceMark;};interface PerformanceMeasure extends PerformanceEntry{}declare var PerformanceMeasure:{prototype:PerformanceMeasure;new():PerformanceMeasure;};interface PerformanceObserver{disconnect():void;observe(options?:PerformanceObserverInit):void;takeRecords():PerformanceEntryList;}declare var PerformanceObserver:{prototype:PerformanceObserver;new(callback:PerformanceObserverCallback):PerformanceObserver;readonly supportedEntryTypes:ReadonlyArray<string>;};interface PerformanceObserverEntryList{getEntries():PerformanceEntryList;getEntriesByName(name:string,type?:string):PerformanceEntryList;getEntriesByType(type:string):PerformanceEntryList;}declare var PerformanceObserverEntryList:{prototype:PerformanceObserverEntryList;new():PerformanceObserverEntryList;};interface PerformanceResourceTiming extends PerformanceEntry{readonly connectEnd:number;readonly connectStart:number;readonly decodedBodySize:number;readonly domainLookupEnd:number;readonly domainLookupStart:number;readonly encodedBodySize:number;readonly fetchStart:number;readonly initiatorType:string;readonly nextHopProtocol:string;readonly redirectEnd:number;readonly redirectStart:number;readonly requestStart:number;readonly responseEnd:number;readonly responseStart:number;readonly secureConnectionStart:number;readonly transferSize:number;readonly workerStart:number;toJSON():any;}declare var PerformanceResourceTiming:{prototype:PerformanceResourceTiming;new():PerformanceResourceTiming;};interface PermissionStatusEventMap{"change":Event;}interface PermissionStatus extends EventTarget{onchange:((this:PermissionStatus,ev:Event)=>any)|null;readonly state:PermissionState;addEventListener<K extends keyof PermissionStatusEventMap>(type:K,listener:(this:PermissionStatus,ev:PermissionStatusEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof PermissionStatusEventMap>(type:K,listener:(this:PermissionStatus,ev:PermissionStatusEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var PermissionStatus:{prototype:PermissionStatus;new():PermissionStatus;};interface Permissions{query(permissionDesc:PermissionDescriptor|DevicePermissionDescriptor|MidiPermissionDescriptor|PushPermissionDescriptor):Promise<PermissionStatus>;}declare var Permissions:{prototype:Permissions;new():Permissions;};interface ProgressEvent<T extends EventTarget=EventTarget>extends Event{readonly lengthComputable:boolean;readonly loaded:number;readonly target:T|null;readonly total:number;}declare var ProgressEvent:{prototype:ProgressEvent;new(type:string,eventInitDict?:ProgressEventInit):ProgressEvent;};interface PromiseRejectionEvent extends Event{readonly promise:Promise<any>;readonly reason:any;}declare var PromiseRejectionEvent:{prototype:PromiseRejectionEvent;new(type:string,eventInitDict:PromiseRejectionEventInit):PromiseRejectionEvent;};interface PushEvent extends ExtendableEvent{readonly data:PushMessageData|null;}declare var PushEvent:{prototype:PushEvent;new(type:string,eventInitDict?:PushEventInit):PushEvent;};interface PushManager{getSubscription():Promise<PushSubscription|null>;permissionState(options?:PushSubscriptionOptionsInit):Promise<PushPermissionState>;subscribe(options?:PushSubscriptionOptionsInit):Promise<PushSubscription>;}declare var PushManager:{prototype:PushManager;new():PushManager;readonly supportedContentEncodings:ReadonlyArray<string>;};interface PushMessageData{arrayBuffer():ArrayBuffer;blob():Blob;json():any;text():string;}declare var PushMessageData:{prototype:PushMessageData;new():PushMessageData;};interface PushSubscription{readonly endpoint:string;readonly expirationTime:number|null;readonly options:PushSubscriptionOptions;getKey(name:PushEncryptionKeyName):ArrayBuffer|null;toJSON():PushSubscriptionJSON;unsubscribe():Promise<boolean>;}declare var PushSubscription:{prototype:PushSubscription;new():PushSubscription;};interface PushSubscriptionChangeEvent extends ExtendableEvent{readonly newSubscription:PushSubscription|null;readonly oldSubscription:PushSubscription|null;}declare var PushSubscriptionChangeEvent:{prototype:PushSubscriptionChangeEvent;new(type:string,eventInitDict?:PushSubscriptionChangeInit):PushSubscriptionChangeEvent;};interface PushSubscriptionOptions{readonly applicationServerKey:ArrayBuffer|null;readonly userVisibleOnly:boolean;}declare var PushSubscriptionOptions:{prototype:PushSubscriptionOptions;new():PushSubscriptionOptions;};interface ReadableByteStreamController{readonly byobRequest:ReadableStreamBYOBRequest|undefined;readonly desiredSize:number|null;close():void;enqueue(chunk:ArrayBufferView):void;error(error?:any):void;}interface ReadableStream<R=any>{readonly locked:boolean;cancel(reason?:any):Promise<void>;getReader(options:{mode:"byob"}):ReadableStreamBYOBReader;getReader():ReadableStreamDefaultReader<R>;pipeThrough<T>({writable,readable}:{writable:WritableStream<R>,readable:ReadableStream<T>},options?:PipeOptions):ReadableStream<T>;pipeTo(dest:WritableStream<R>,options?:PipeOptions):Promise<void>;tee():[ReadableStream<R>,ReadableStream<R>];}declare var ReadableStream:{prototype:ReadableStream;new(underlyingSource:UnderlyingByteSource,strategy?:{highWaterMark?:number,size?:undefined}):ReadableStream<Uint8Array>;new<R=any>(underlyingSource?:UnderlyingSource<R>,strategy?:QueuingStrategy<R>):ReadableStream<R>;};interface ReadableStreamBYOBReader{readonly closed:Promise<void>;cancel(reason?:any):Promise<void>;read<T extends ArrayBufferView>(view:T):Promise<ReadableStreamReadResult<T>>;releaseLock():void;}interface ReadableStreamBYOBRequest{readonly view:ArrayBufferView;respond(bytesWritten:number):void;respondWithNewView(view:ArrayBufferView):void;}interface ReadableStreamDefaultController<R=any>{readonly desiredSize:number|null;close():void;enqueue(chunk:R):void;error(error?:any):void;}interface ReadableStreamDefaultReader<R=any>{readonly closed:Promise<void>;cancel(reason?:any):Promise<void>;read():Promise<ReadableStreamReadResult<R>>;releaseLock():void;}interface ReadableStreamReadResult<T>{done:boolean;value:T;}interface ReadableStreamReader<R=any>{cancel():Promise<void>;read():Promise<ReadableStreamReadResult<R>>;releaseLock():void;}declare var ReadableStreamReader:{prototype:ReadableStreamReader;new():ReadableStreamReader;};interface Request extends Body{readonly cache:RequestCache;readonly credentials:RequestCredentials;readonly destination:RequestDestination;readonly headers:Headers;readonly integrity:string;readonly isHistoryNavigation:boolean;readonly isReloadNavigation:boolean;readonly keepalive:boolean;readonly method:string;readonly mode:RequestMode;readonly redirect:RequestRedirect;readonly referrer:string;readonly referrerPolicy:ReferrerPolicy;readonly signal:AbortSignal;readonly url:string;clone():Request;}declare var Request:{prototype:Request;new(input:RequestInfo,init?:RequestInit):Request;};interface Response extends Body{readonly headers:Headers;readonly ok:boolean;readonly redirected:boolean;readonly status:number;readonly statusText:string;readonly trailer:Promise<Headers>;readonly type:ResponseType;readonly url:string;clone():Response;}declare var Response:{prototype:Response;new(body?:BodyInit|null,init?:ResponseInit):Response;error():Response;redirect(url:string,status?:number):Response;};interface ServiceWorkerEventMap extends AbstractWorkerEventMap{"statechange":Event;}interface ServiceWorker extends EventTarget,AbstractWorker{onstatechange:((this:ServiceWorker,ev:Event)=>any)|null;readonly scriptURL:string;readonly state:ServiceWorkerState;postMessage(message:any,transfer:Transferable[]):void;postMessage(message:any,options?:PostMessageOptions):void;addEventListener<K extends keyof ServiceWorkerEventMap>(type:K,listener:(this:ServiceWorker,ev:ServiceWorkerEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof ServiceWorkerEventMap>(type:K,listener:(this:ServiceWorker,ev:ServiceWorkerEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var ServiceWorker:{prototype:ServiceWorker;new():ServiceWorker;};interface ServiceWorkerContainerEventMap{"controllerchange":Event;"message":MessageEvent;"messageerror":MessageEvent;}interface ServiceWorkerContainer extends EventTarget{readonly controller:ServiceWorker|null;oncontrollerchange:((this:ServiceWorkerContainer,ev:Event)=>any)|null;onmessage:((this:ServiceWorkerContainer,ev:MessageEvent)=>any)|null;onmessageerror:((this:ServiceWorkerContainer,ev:MessageEvent)=>any)|null;readonly ready:Promise<ServiceWorkerRegistration>;getRegistration(clientURL?:string):Promise<ServiceWorkerRegistration|undefined>;getRegistrations():Promise<ReadonlyArray<ServiceWorkerRegistration>>;register(scriptURL:string,options?:RegistrationOptions):Promise<ServiceWorkerRegistration>;startMessages():void;addEventListener<K extends keyof ServiceWorkerContainerEventMap>(type:K,listener:(this:ServiceWorkerContainer,ev:ServiceWorkerContainerEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof ServiceWorkerContainerEventMap>(type:K,listener:(this:ServiceWorkerContainer,ev:ServiceWorkerContainerEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var ServiceWorkerContainer:{prototype:ServiceWorkerContainer;new():ServiceWorkerContainer;};interface ServiceWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap{"activate":ExtendableEvent;"fetch":FetchEvent;"install":ExtendableEvent;"message":ExtendableMessageEvent;"messageerror":MessageEvent;"notificationclick":NotificationEvent;"notificationclose":NotificationEvent;"push":PushEvent;"pushsubscriptionchange":PushSubscriptionChangeEvent;"sync":SyncEvent;}interface ServiceWorkerGlobalScope extends WorkerGlobalScope{readonly clients:Clients;onactivate:((this:ServiceWorkerGlobalScope,ev:ExtendableEvent)=>any)|null;onfetch:((this:ServiceWorkerGlobalScope,ev:FetchEvent)=>any)|null;oninstall:((this:ServiceWorkerGlobalScope,ev:ExtendableEvent)=>any)|null;onmessage:((this:ServiceWorkerGlobalScope,ev:ExtendableMessageEvent)=>any)|null;onmessageerror:((this:ServiceWorkerGlobalScope,ev:MessageEvent)=>any)|null;onnotificationclick:((this:ServiceWorkerGlobalScope,ev:NotificationEvent)=>any)|null;onnotificationclose:((this:ServiceWorkerGlobalScope,ev:NotificationEvent)=>any)|null;onpush:((this:ServiceWorkerGlobalScope,ev:PushEvent)=>any)|null;onpushsubscriptionchange:((this:ServiceWorkerGlobalScope,ev:PushSubscriptionChangeEvent)=>any)|null;onsync:((this:ServiceWorkerGlobalScope,ev:SyncEvent)=>any)|null;readonly registration:ServiceWorkerRegistration;skipWaiting():Promise<void>;addEventListener<K extends keyof ServiceWorkerGlobalScopeEventMap>(type:K,listener:(this:ServiceWorkerGlobalScope,ev:ServiceWorkerGlobalScopeEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof ServiceWorkerGlobalScopeEventMap>(type:K,listener:(this:ServiceWorkerGlobalScope,ev:ServiceWorkerGlobalScopeEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var ServiceWorkerGlobalScope:{prototype:ServiceWorkerGlobalScope;new():ServiceWorkerGlobalScope;};interface ServiceWorkerRegistrationEventMap{"updatefound":Event;}interface ServiceWorkerRegistration extends EventTarget{readonly active:ServiceWorker|null;readonly installing:ServiceWorker|null;readonly navigationPreload:NavigationPreloadManager;onupdatefound:((this:ServiceWorkerRegistration,ev:Event)=>any)|null;readonly pushManager:PushManager;readonly scope:string;readonly sync:SyncManager;readonly updateViaCache:ServiceWorkerUpdateViaCache;readonly waiting:ServiceWorker|null;getNotifications(filter?:GetNotificationOptions):Promise<Notification[]>;showNotification(title:string,options?:NotificationOptions):Promise<void>;unregister():Promise<boolean>;update():Promise<void>;addEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type:K,listener:(this:ServiceWorkerRegistration,ev:ServiceWorkerRegistrationEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type:K,listener:(this:ServiceWorkerRegistration,ev:ServiceWorkerRegistrationEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var ServiceWorkerRegistration:{prototype:ServiceWorkerRegistration;new():ServiceWorkerRegistration;};interface StorageManager{estimate():Promise<StorageEstimate>;persisted():Promise<boolean>;}declare var StorageManager:{prototype:StorageManager;new():StorageManager;};interface SubtleCrypto{decrypt(algorithm:string|RsaOaepParams|AesCtrParams|AesCbcParams|AesCmacParams|AesGcmParams|AesCfbParams,key:CryptoKey,data:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer):PromiseLike<ArrayBuffer>;deriveBits(algorithm:string|EcdhKeyDeriveParams|DhKeyDeriveParams|ConcatParams|HkdfCtrParams|Pbkdf2Params,baseKey:CryptoKey,length:number):PromiseLike<ArrayBuffer>;deriveKey(algorithm:string|EcdhKeyDeriveParams|DhKeyDeriveParams|ConcatParams|HkdfCtrParams|Pbkdf2Params,baseKey:CryptoKey,derivedKeyType:string|AesDerivedKeyParams|HmacImportParams|ConcatParams|HkdfCtrParams|Pbkdf2Params,extractable:boolean,keyUsages:string[]):PromiseLike<CryptoKey>;digest(algorithm:string|Algorithm,data:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer):PromiseLike<ArrayBuffer>;encrypt(algorithm:string|RsaOaepParams|AesCtrParams|AesCbcParams|AesCmacParams|AesGcmParams|AesCfbParams,key:CryptoKey,data:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer):PromiseLike<ArrayBuffer>;exportKey(format:"jwk",key:CryptoKey):PromiseLike<JsonWebKey>;exportKey(format:"raw"|"pkcs8"|"spki",key:CryptoKey):PromiseLike<ArrayBuffer>;exportKey(format:string,key:CryptoKey):PromiseLike<JsonWebKey|ArrayBuffer>;generateKey(algorithm:string,extractable:boolean,keyUsages:string[]):PromiseLike<CryptoKeyPair|CryptoKey>;generateKey(algorithm:RsaHashedKeyGenParams|EcKeyGenParams|DhKeyGenParams,extractable:boolean,keyUsages:string[]):PromiseLike<CryptoKeyPair>;generateKey(algorithm:AesKeyGenParams|HmacKeyGenParams|Pbkdf2Params,extractable:boolean,keyUsages:string[]):PromiseLike<CryptoKey>;importKey(format:"jwk",keyData:JsonWebKey,algorithm:string|RsaHashedImportParams|EcKeyImportParams|HmacImportParams|DhImportKeyParams|AesKeyAlgorithm,extractable:boolean,keyUsages:string[]):PromiseLike<CryptoKey>;importKey(format:"raw"|"pkcs8"|"spki",keyData:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer,algorithm:string|RsaHashedImportParams|EcKeyImportParams|HmacImportParams|DhImportKeyParams|AesKeyAlgorithm,extractable:boolean,keyUsages:string[]):PromiseLike<CryptoKey>;importKey(format:string,keyData:JsonWebKey|Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer,algorithm:string|RsaHashedImportParams|EcKeyImportParams|HmacImportParams|DhImportKeyParams|AesKeyAlgorithm,extractable:boolean,keyUsages:string[]):PromiseLike<CryptoKey>;sign(algorithm:string|RsaPssParams|EcdsaParams|AesCmacParams,key:CryptoKey,data:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer):PromiseLike<ArrayBuffer>;unwrapKey(format:string,wrappedKey:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer,unwrappingKey:CryptoKey,unwrapAlgorithm:string|Algorithm,unwrappedKeyAlgorithm:string|Algorithm,extractable:boolean,keyUsages:string[]):PromiseLike<CryptoKey>;verify(algorithm:string|RsaPssParams|EcdsaParams|AesCmacParams,key:CryptoKey,signature:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer,data:Int8Array|Int16Array|Int32Array|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|Float32Array|Float64Array|DataView|ArrayBuffer):PromiseLike<boolean>;wrapKey(format:string,key:CryptoKey,wrappingKey:CryptoKey,wrapAlgorithm:string|Algorithm):PromiseLike<ArrayBuffer>;}declare var SubtleCrypto:{prototype:SubtleCrypto;new():SubtleCrypto;};interface SyncEvent extends ExtendableEvent{readonly lastChance:boolean;readonly tag:string;}declare var SyncEvent:{prototype:SyncEvent;new(type:string,init:SyncEventInit):SyncEvent;};interface SyncManager{getTags():Promise<string[]>;register(tag:string):Promise<void>;}declare var SyncManager:{prototype:SyncManager;new():SyncManager;};interface TextDecoder extends TextDecoderCommon{decode(input?:BufferSource,options?:TextDecodeOptions):string;}declare var TextDecoder:{prototype:TextDecoder;new(label?:string,options?:TextDecoderOptions):TextDecoder;};interface TextDecoderCommon{readonly encoding:string;readonly fatal:boolean;readonly ignoreBOM:boolean;}interface TextDecoderStream extends GenericTransformStream,TextDecoderCommon{}declare var TextDecoderStream:{prototype:TextDecoderStream;new(label?:string,options?:TextDecoderOptions):TextDecoderStream;};interface TextEncoder extends TextEncoderCommon{encode(input?:string):Uint8Array;encodeInto(source:string,destination:Uint8Array):TextEncoderEncodeIntoResult;}declare var TextEncoder:{prototype:TextEncoder;new():TextEncoder;};interface TextEncoderCommon{readonly encoding:string;}interface TextEncoderStream extends GenericTransformStream,TextEncoderCommon{}declare var TextEncoderStream:{prototype:TextEncoderStream;new():TextEncoderStream;};interface TextMetrics{readonly actualBoundingBoxAscent:number;readonly actualBoundingBoxDescent:number;readonly actualBoundingBoxLeft:number;readonly actualBoundingBoxRight:number;readonly alphabeticBaseline:number;readonly emHeightAscent:number;readonly emHeightDescent:number;readonly fontBoundingBoxAscent:number;readonly fontBoundingBoxDescent:number;readonly hangingBaseline:number;readonly ideographicBaseline:number;readonly width:number;}declare var TextMetrics:{prototype:TextMetrics;new():TextMetrics;};interface TransformStream<I=any,O=any>{readonly readable:ReadableStream<O>;readonly writable:WritableStream<I>;}declare var TransformStream:{prototype:TransformStream;new<I=any,O=any>(transformer?:Transformer<I,O>,writableStrategy?:QueuingStrategy<I>,readableStrategy?:QueuingStrategy<O>):TransformStream<I,O>;};interface TransformStreamDefaultController<O=any>{readonly desiredSize:number|null;enqueue(chunk:O):void;error(reason?:any):void;terminate():void;}interface URL{hash:string;host:string;hostname:string;href:string;readonly origin:string;password:string;pathname:string;port:string;protocol:string;search:string;readonly searchParams:URLSearchParams;username:string;toJSON():string;}declare var URL:{prototype:URL;new(url:string,base?:string|URL):URL;createObjectURL(object:any):string;revokeObjectURL(url:string):void;};interface URLSearchParams{append(name:string,value:string):void;delete(name:string):void;get(name:string):string|null;getAll(name:string):string[];has(name:string):boolean;set(name:string,value:string):void;sort():void;forEach(callbackfn:(value:string,key:string,parent:URLSearchParams)=>void,thisArg?:any):void;}declare var URLSearchParams:{prototype:URLSearchParams;new(init?:string[][]|Record<string,string>|string|URLSearchParams):URLSearchParams;};interface WEBGL_color_buffer_float{readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT:GLenum;readonly RGBA32F_EXT:GLenum;readonly UNSIGNED_NORMALIZED_EXT:GLenum;}interface WEBGL_compressed_texture_astc{getSupportedProfiles():string[];readonly COMPRESSED_RGBA_ASTC_10x10_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_10x5_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_10x6_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_10x8_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_12x10_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_12x12_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_4x4_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_5x4_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_5x5_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_6x5_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_6x6_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_8x5_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_8x6_KHR:GLenum;readonly COMPRESSED_RGBA_ASTC_8x8_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:GLenum;readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:GLenum;}interface WEBGL_compressed_texture_s3tc{readonly COMPRESSED_RGBA_S3TC_DXT1_EXT:GLenum;readonly COMPRESSED_RGBA_S3TC_DXT3_EXT:GLenum;readonly COMPRESSED_RGBA_S3TC_DXT5_EXT:GLenum;readonly COMPRESSED_RGB_S3TC_DXT1_EXT:GLenum;}interface WEBGL_compressed_texture_s3tc_srgb{readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT:GLenum;readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT:GLenum;readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT:GLenum;readonly COMPRESSED_SRGB_S3TC_DXT1_EXT:GLenum;}interface WEBGL_debug_renderer_info{readonly UNMASKED_RENDERER_WEBGL:GLenum;readonly UNMASKED_VENDOR_WEBGL:GLenum;}interface WEBGL_debug_shaders{getTranslatedShaderSource(shader:WebGLShader):string;}interface WEBGL_depth_texture{readonly UNSIGNED_INT_24_8_WEBGL:GLenum;}interface WEBGL_draw_buffers{drawBuffersWEBGL(buffers:GLenum[]):void;readonly COLOR_ATTACHMENT0_WEBGL:GLenum;readonly COLOR_ATTACHMENT10_WEBGL:GLenum;readonly COLOR_ATTACHMENT11_WEBGL:GLenum;readonly COLOR_ATTACHMENT12_WEBGL:GLenum;readonly COLOR_ATTACHMENT13_WEBGL:GLenum;readonly COLOR_ATTACHMENT14_WEBGL:GLenum;readonly COLOR_ATTACHMENT15_WEBGL:GLenum;readonly COLOR_ATTACHMENT1_WEBGL:GLenum;readonly COLOR_ATTACHMENT2_WEBGL:GLenum;readonly COLOR_ATTACHMENT3_WEBGL:GLenum;readonly COLOR_ATTACHMENT4_WEBGL:GLenum;readonly COLOR_ATTACHMENT5_WEBGL:GLenum;readonly COLOR_ATTACHMENT6_WEBGL:GLenum;readonly COLOR_ATTACHMENT7_WEBGL:GLenum;readonly COLOR_ATTACHMENT8_WEBGL:GLenum;readonly COLOR_ATTACHMENT9_WEBGL:GLenum;readonly DRAW_BUFFER0_WEBGL:GLenum;readonly DRAW_BUFFER10_WEBGL:GLenum;readonly DRAW_BUFFER11_WEBGL:GLenum;readonly DRAW_BUFFER12_WEBGL:GLenum;readonly DRAW_BUFFER13_WEBGL:GLenum;readonly DRAW_BUFFER14_WEBGL:GLenum;readonly DRAW_BUFFER15_WEBGL:GLenum;readonly DRAW_BUFFER1_WEBGL:GLenum;readonly DRAW_BUFFER2_WEBGL:GLenum;readonly DRAW_BUFFER3_WEBGL:GLenum;readonly DRAW_BUFFER4_WEBGL:GLenum;readonly DRAW_BUFFER5_WEBGL:GLenum;readonly DRAW_BUFFER6_WEBGL:GLenum;readonly DRAW_BUFFER7_WEBGL:GLenum;readonly DRAW_BUFFER8_WEBGL:GLenum;readonly DRAW_BUFFER9_WEBGL:GLenum;readonly MAX_COLOR_ATTACHMENTS_WEBGL:GLenum;readonly MAX_DRAW_BUFFERS_WEBGL:GLenum;}interface WEBGL_lose_context{loseContext():void;restoreContext():void;}interface WebGL2RenderingContext extends WebGL2RenderingContextBase,WebGL2RenderingContextOverloads,WebGLRenderingContextBase{}declare var WebGL2RenderingContext:{prototype:WebGL2RenderingContext;new():WebGL2RenderingContext;readonly ACTIVE_ATTRIBUTES:GLenum;readonly ACTIVE_TEXTURE:GLenum;readonly ACTIVE_UNIFORMS:GLenum;readonly ALIASED_LINE_WIDTH_RANGE:GLenum;readonly ALIASED_POINT_SIZE_RANGE:GLenum;readonly ALPHA:GLenum;readonly ALPHA_BITS:GLenum;readonly ALWAYS:GLenum;readonly ARRAY_BUFFER:GLenum;readonly ARRAY_BUFFER_BINDING:GLenum;readonly ATTACHED_SHADERS:GLenum;readonly BACK:GLenum;readonly BLEND:GLenum;readonly BLEND_COLOR:GLenum;readonly BLEND_DST_ALPHA:GLenum;readonly BLEND_DST_RGB:GLenum;readonly BLEND_EQUATION:GLenum;readonly BLEND_EQUATION_ALPHA:GLenum;readonly BLEND_EQUATION_RGB:GLenum;readonly BLEND_SRC_ALPHA:GLenum;readonly BLEND_SRC_RGB:GLenum;readonly BLUE_BITS:GLenum;readonly BOOL:GLenum;readonly BOOL_VEC2:GLenum;readonly BOOL_VEC3:GLenum;readonly BOOL_VEC4:GLenum;readonly BROWSER_DEFAULT_WEBGL:GLenum;readonly BUFFER_SIZE:GLenum;readonly BUFFER_USAGE:GLenum;readonly BYTE:GLenum;readonly CCW:GLenum;readonly CLAMP_TO_EDGE:GLenum;readonly COLOR_ATTACHMENT0:GLenum;readonly COLOR_BUFFER_BIT:GLenum;readonly COLOR_CLEAR_VALUE:GLenum;readonly COLOR_WRITEMASK:GLenum;readonly COMPILE_STATUS:GLenum;readonly COMPRESSED_TEXTURE_FORMATS:GLenum;readonly CONSTANT_ALPHA:GLenum;readonly CONSTANT_COLOR:GLenum;readonly CONTEXT_LOST_WEBGL:GLenum;readonly CULL_FACE:GLenum;readonly CULL_FACE_MODE:GLenum;readonly CURRENT_PROGRAM:GLenum;readonly CURRENT_VERTEX_ATTRIB:GLenum;readonly CW:GLenum;readonly DECR:GLenum;readonly DECR_WRAP:GLenum;readonly DELETE_STATUS:GLenum;readonly DEPTH_ATTACHMENT:GLenum;readonly DEPTH_BITS:GLenum;readonly DEPTH_BUFFER_BIT:GLenum;readonly DEPTH_CLEAR_VALUE:GLenum;readonly DEPTH_COMPONENT:GLenum;readonly DEPTH_COMPONENT16:GLenum;readonly DEPTH_FUNC:GLenum;readonly DEPTH_RANGE:GLenum;readonly DEPTH_STENCIL:GLenum;readonly DEPTH_STENCIL_ATTACHMENT:GLenum;readonly DEPTH_TEST:GLenum;readonly DEPTH_WRITEMASK:GLenum;readonly DITHER:GLenum;readonly DONT_CARE:GLenum;readonly DST_ALPHA:GLenum;readonly DST_COLOR:GLenum;readonly DYNAMIC_DRAW:GLenum;readonly ELEMENT_ARRAY_BUFFER:GLenum;readonly ELEMENT_ARRAY_BUFFER_BINDING:GLenum;readonly EQUAL:GLenum;readonly FASTEST:GLenum;readonly FLOAT:GLenum;readonly FLOAT_MAT2:GLenum;readonly FLOAT_MAT3:GLenum;readonly FLOAT_MAT4:GLenum;readonly FLOAT_VEC2:GLenum;readonly FLOAT_VEC3:GLenum;readonly FLOAT_VEC4:GLenum;readonly FRAGMENT_SHADER:GLenum;readonly FRAMEBUFFER:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:GLenum;readonly FRAMEBUFFER_BINDING:GLenum;readonly FRAMEBUFFER_COMPLETE:GLenum;readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT:GLenum;readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS:GLenum;readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:GLenum;readonly FRAMEBUFFER_UNSUPPORTED:GLenum;readonly FRONT:GLenum;readonly FRONT_AND_BACK:GLenum;readonly FRONT_FACE:GLenum;readonly FUNC_ADD:GLenum;readonly FUNC_REVERSE_SUBTRACT:GLenum;readonly FUNC_SUBTRACT:GLenum;readonly GENERATE_MIPMAP_HINT:GLenum;readonly GEQUAL:GLenum;readonly GREATER:GLenum;readonly GREEN_BITS:GLenum;readonly HIGH_FLOAT:GLenum;readonly HIGH_INT:GLenum;readonly IMPLEMENTATION_COLOR_READ_FORMAT:GLenum;readonly IMPLEMENTATION_COLOR_READ_TYPE:GLenum;readonly INCR:GLenum;readonly INCR_WRAP:GLenum;readonly INT:GLenum;readonly INT_VEC2:GLenum;readonly INT_VEC3:GLenum;readonly INT_VEC4:GLenum;readonly INVALID_ENUM:GLenum;readonly INVALID_FRAMEBUFFER_OPERATION:GLenum;readonly INVALID_OPERATION:GLenum;readonly INVALID_VALUE:GLenum;readonly INVERT:GLenum;readonly KEEP:GLenum;readonly LEQUAL:GLenum;readonly LESS:GLenum;readonly LINEAR:GLenum;readonly LINEAR_MIPMAP_LINEAR:GLenum;readonly LINEAR_MIPMAP_NEAREST:GLenum;readonly LINES:GLenum;readonly LINE_LOOP:GLenum;readonly LINE_STRIP:GLenum;readonly LINE_WIDTH:GLenum;readonly LINK_STATUS:GLenum;readonly LOW_FLOAT:GLenum;readonly LOW_INT:GLenum;readonly LUMINANCE:GLenum;readonly LUMINANCE_ALPHA:GLenum;readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_CUBE_MAP_TEXTURE_SIZE:GLenum;readonly MAX_FRAGMENT_UNIFORM_VECTORS:GLenum;readonly MAX_RENDERBUFFER_SIZE:GLenum;readonly MAX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_TEXTURE_SIZE:GLenum;readonly MAX_VARYING_VECTORS:GLenum;readonly MAX_VERTEX_ATTRIBS:GLenum;readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_VERTEX_UNIFORM_VECTORS:GLenum;readonly MAX_VIEWPORT_DIMS:GLenum;readonly MEDIUM_FLOAT:GLenum;readonly MEDIUM_INT:GLenum;readonly MIRRORED_REPEAT:GLenum;readonly NEAREST:GLenum;readonly NEAREST_MIPMAP_LINEAR:GLenum;readonly NEAREST_MIPMAP_NEAREST:GLenum;readonly NEVER:GLenum;readonly NICEST:GLenum;readonly NONE:GLenum;readonly NOTEQUAL:GLenum;readonly NO_ERROR:GLenum;readonly ONE:GLenum;readonly ONE_MINUS_CONSTANT_ALPHA:GLenum;readonly ONE_MINUS_CONSTANT_COLOR:GLenum;readonly ONE_MINUS_DST_ALPHA:GLenum;readonly ONE_MINUS_DST_COLOR:GLenum;readonly ONE_MINUS_SRC_ALPHA:GLenum;readonly ONE_MINUS_SRC_COLOR:GLenum;readonly OUT_OF_MEMORY:GLenum;readonly PACK_ALIGNMENT:GLenum;readonly POINTS:GLenum;readonly POLYGON_OFFSET_FACTOR:GLenum;readonly POLYGON_OFFSET_FILL:GLenum;readonly POLYGON_OFFSET_UNITS:GLenum;readonly RED_BITS:GLenum;readonly RENDERBUFFER:GLenum;readonly RENDERBUFFER_ALPHA_SIZE:GLenum;readonly RENDERBUFFER_BINDING:GLenum;readonly RENDERBUFFER_BLUE_SIZE:GLenum;readonly RENDERBUFFER_DEPTH_SIZE:GLenum;readonly RENDERBUFFER_GREEN_SIZE:GLenum;readonly RENDERBUFFER_HEIGHT:GLenum;readonly RENDERBUFFER_INTERNAL_FORMAT:GLenum;readonly RENDERBUFFER_RED_SIZE:GLenum;readonly RENDERBUFFER_STENCIL_SIZE:GLenum;readonly RENDERBUFFER_WIDTH:GLenum;readonly RENDERER:GLenum;readonly REPEAT:GLenum;readonly REPLACE:GLenum;readonly RGB:GLenum;readonly RGB565:GLenum;readonly RGB5_A1:GLenum;readonly RGBA:GLenum;readonly RGBA4:GLenum;readonly SAMPLER_2D:GLenum;readonly SAMPLER_CUBE:GLenum;readonly SAMPLES:GLenum;readonly SAMPLE_ALPHA_TO_COVERAGE:GLenum;readonly SAMPLE_BUFFERS:GLenum;readonly SAMPLE_COVERAGE:GLenum;readonly SAMPLE_COVERAGE_INVERT:GLenum;readonly SAMPLE_COVERAGE_VALUE:GLenum;readonly SCISSOR_BOX:GLenum;readonly SCISSOR_TEST:GLenum;readonly SHADER_TYPE:GLenum;readonly SHADING_LANGUAGE_VERSION:GLenum;readonly SHORT:GLenum;readonly SRC_ALPHA:GLenum;readonly SRC_ALPHA_SATURATE:GLenum;readonly SRC_COLOR:GLenum;readonly STATIC_DRAW:GLenum;readonly STENCIL_ATTACHMENT:GLenum;readonly STENCIL_BACK_FAIL:GLenum;readonly STENCIL_BACK_FUNC:GLenum;readonly STENCIL_BACK_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_BACK_PASS_DEPTH_PASS:GLenum;readonly STENCIL_BACK_REF:GLenum;readonly STENCIL_BACK_VALUE_MASK:GLenum;readonly STENCIL_BACK_WRITEMASK:GLenum;readonly STENCIL_BITS:GLenum;readonly STENCIL_BUFFER_BIT:GLenum;readonly STENCIL_CLEAR_VALUE:GLenum;readonly STENCIL_FAIL:GLenum;readonly STENCIL_FUNC:GLenum;readonly STENCIL_INDEX8:GLenum;readonly STENCIL_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_PASS_DEPTH_PASS:GLenum;readonly STENCIL_REF:GLenum;readonly STENCIL_TEST:GLenum;readonly STENCIL_VALUE_MASK:GLenum;readonly STENCIL_WRITEMASK:GLenum;readonly STREAM_DRAW:GLenum;readonly SUBPIXEL_BITS:GLenum;readonly TEXTURE:GLenum;readonly TEXTURE0:GLenum;readonly TEXTURE1:GLenum;readonly TEXTURE10:GLenum;readonly TEXTURE11:GLenum;readonly TEXTURE12:GLenum;readonly TEXTURE13:GLenum;readonly TEXTURE14:GLenum;readonly TEXTURE15:GLenum;readonly TEXTURE16:GLenum;readonly TEXTURE17:GLenum;readonly TEXTURE18:GLenum;readonly TEXTURE19:GLenum;readonly TEXTURE2:GLenum;readonly TEXTURE20:GLenum;readonly TEXTURE21:GLenum;readonly TEXTURE22:GLenum;readonly TEXTURE23:GLenum;readonly TEXTURE24:GLenum;readonly TEXTURE25:GLenum;readonly TEXTURE26:GLenum;readonly TEXTURE27:GLenum;readonly TEXTURE28:GLenum;readonly TEXTURE29:GLenum;readonly TEXTURE3:GLenum;readonly TEXTURE30:GLenum;readonly TEXTURE31:GLenum;readonly TEXTURE4:GLenum;readonly TEXTURE5:GLenum;readonly TEXTURE6:GLenum;readonly TEXTURE7:GLenum;readonly TEXTURE8:GLenum;readonly TEXTURE9:GLenum;readonly TEXTURE_2D:GLenum;readonly TEXTURE_BINDING_2D:GLenum;readonly TEXTURE_BINDING_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Z:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Z:GLenum;readonly TEXTURE_MAG_FILTER:GLenum;readonly TEXTURE_MIN_FILTER:GLenum;readonly TEXTURE_WRAP_S:GLenum;readonly TEXTURE_WRAP_T:GLenum;readonly TRIANGLES:GLenum;readonly TRIANGLE_FAN:GLenum;readonly TRIANGLE_STRIP:GLenum;readonly UNPACK_ALIGNMENT:GLenum;readonly UNPACK_COLORSPACE_CONVERSION_WEBGL:GLenum;readonly UNPACK_FLIP_Y_WEBGL:GLenum;readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL:GLenum;readonly UNSIGNED_BYTE:GLenum;readonly UNSIGNED_INT:GLenum;readonly UNSIGNED_SHORT:GLenum;readonly UNSIGNED_SHORT_4_4_4_4:GLenum;readonly UNSIGNED_SHORT_5_5_5_1:GLenum;readonly UNSIGNED_SHORT_5_6_5:GLenum;readonly VALIDATE_STATUS:GLenum;readonly VENDOR:GLenum;readonly VERSION:GLenum;readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:GLenum;readonly VERTEX_ATTRIB_ARRAY_ENABLED:GLenum;readonly VERTEX_ATTRIB_ARRAY_NORMALIZED:GLenum;readonly VERTEX_ATTRIB_ARRAY_POINTER:GLenum;readonly VERTEX_ATTRIB_ARRAY_SIZE:GLenum;readonly VERTEX_ATTRIB_ARRAY_STRIDE:GLenum;readonly VERTEX_ATTRIB_ARRAY_TYPE:GLenum;readonly VERTEX_SHADER:GLenum;readonly VIEWPORT:GLenum;readonly ZERO:GLenum;readonly ACTIVE_UNIFORM_BLOCKS:GLenum;readonly ALREADY_SIGNALED:GLenum;readonly ANY_SAMPLES_PASSED:GLenum;readonly ANY_SAMPLES_PASSED_CONSERVATIVE:GLenum;readonly COLOR:GLenum;readonly COLOR_ATTACHMENT1:GLenum;readonly COLOR_ATTACHMENT10:GLenum;readonly COLOR_ATTACHMENT11:GLenum;readonly COLOR_ATTACHMENT12:GLenum;readonly COLOR_ATTACHMENT13:GLenum;readonly COLOR_ATTACHMENT14:GLenum;readonly COLOR_ATTACHMENT15:GLenum;readonly COLOR_ATTACHMENT2:GLenum;readonly COLOR_ATTACHMENT3:GLenum;readonly COLOR_ATTACHMENT4:GLenum;readonly COLOR_ATTACHMENT5:GLenum;readonly COLOR_ATTACHMENT6:GLenum;readonly COLOR_ATTACHMENT7:GLenum;readonly COLOR_ATTACHMENT8:GLenum;readonly COLOR_ATTACHMENT9:GLenum;readonly COMPARE_REF_TO_TEXTURE:GLenum;readonly CONDITION_SATISFIED:GLenum;readonly COPY_READ_BUFFER:GLenum;readonly COPY_READ_BUFFER_BINDING:GLenum;readonly COPY_WRITE_BUFFER:GLenum;readonly COPY_WRITE_BUFFER_BINDING:GLenum;readonly CURRENT_QUERY:GLenum;readonly DEPTH:GLenum;readonly DEPTH24_STENCIL8:GLenum;readonly DEPTH32F_STENCIL8:GLenum;readonly DEPTH_COMPONENT24:GLenum;readonly DEPTH_COMPONENT32F:GLenum;readonly DRAW_BUFFER0:GLenum;readonly DRAW_BUFFER1:GLenum;readonly DRAW_BUFFER10:GLenum;readonly DRAW_BUFFER11:GLenum;readonly DRAW_BUFFER12:GLenum;readonly DRAW_BUFFER13:GLenum;readonly DRAW_BUFFER14:GLenum;readonly DRAW_BUFFER15:GLenum;readonly DRAW_BUFFER2:GLenum;readonly DRAW_BUFFER3:GLenum;readonly DRAW_BUFFER4:GLenum;readonly DRAW_BUFFER5:GLenum;readonly DRAW_BUFFER6:GLenum;readonly DRAW_BUFFER7:GLenum;readonly DRAW_BUFFER8:GLenum;readonly DRAW_BUFFER9:GLenum;readonly DRAW_FRAMEBUFFER:GLenum;readonly DRAW_FRAMEBUFFER_BINDING:GLenum;readonly DYNAMIC_COPY:GLenum;readonly DYNAMIC_READ:GLenum;readonly FLOAT_32_UNSIGNED_INT_24_8_REV:GLenum;readonly FLOAT_MAT2x3:GLenum;readonly FLOAT_MAT2x4:GLenum;readonly FLOAT_MAT3x2:GLenum;readonly FLOAT_MAT3x4:GLenum;readonly FLOAT_MAT4x2:GLenum;readonly FLOAT_MAT4x3:GLenum;readonly FRAGMENT_SHADER_DERIVATIVE_HINT:GLenum;readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING:GLenum;readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER:GLenum;readonly FRAMEBUFFER_DEFAULT:GLenum;readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:GLenum;readonly HALF_FLOAT:GLenum;readonly INTERLEAVED_ATTRIBS:GLenum;readonly INT_2_10_10_10_REV:GLenum;readonly INT_SAMPLER_2D:GLenum;readonly INT_SAMPLER_2D_ARRAY:GLenum;readonly INT_SAMPLER_3D:GLenum;readonly INT_SAMPLER_CUBE:GLenum;readonly INVALID_INDEX:GLenum;readonly MAX:GLenum;readonly MAX_3D_TEXTURE_SIZE:GLenum;readonly MAX_ARRAY_TEXTURE_LAYERS:GLenum;readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL:GLenum;readonly MAX_COLOR_ATTACHMENTS:GLenum;readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS:GLenum;readonly MAX_COMBINED_UNIFORM_BLOCKS:GLenum;readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS:GLenum;readonly MAX_DRAW_BUFFERS:GLenum;readonly MAX_ELEMENTS_INDICES:GLenum;readonly MAX_ELEMENTS_VERTICES:GLenum;readonly MAX_ELEMENT_INDEX:GLenum;readonly MAX_FRAGMENT_INPUT_COMPONENTS:GLenum;readonly MAX_FRAGMENT_UNIFORM_BLOCKS:GLenum;readonly MAX_FRAGMENT_UNIFORM_COMPONENTS:GLenum;readonly MAX_PROGRAM_TEXEL_OFFSET:GLenum;readonly MAX_SAMPLES:GLenum;readonly MAX_SERVER_WAIT_TIMEOUT:GLenum;readonly MAX_TEXTURE_LOD_BIAS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS:GLenum;readonly MAX_UNIFORM_BLOCK_SIZE:GLenum;readonly MAX_UNIFORM_BUFFER_BINDINGS:GLenum;readonly MAX_VARYING_COMPONENTS:GLenum;readonly MAX_VERTEX_OUTPUT_COMPONENTS:GLenum;readonly MAX_VERTEX_UNIFORM_BLOCKS:GLenum;readonly MAX_VERTEX_UNIFORM_COMPONENTS:GLenum;readonly MIN:GLenum;readonly MIN_PROGRAM_TEXEL_OFFSET:GLenum;readonly OBJECT_TYPE:GLenum;readonly PACK_ROW_LENGTH:GLenum;readonly PACK_SKIP_PIXELS:GLenum;readonly PACK_SKIP_ROWS:GLenum;readonly PIXEL_PACK_BUFFER:GLenum;readonly PIXEL_PACK_BUFFER_BINDING:GLenum;readonly PIXEL_UNPACK_BUFFER:GLenum;readonly PIXEL_UNPACK_BUFFER_BINDING:GLenum;readonly QUERY_RESULT:GLenum;readonly QUERY_RESULT_AVAILABLE:GLenum;readonly R11F_G11F_B10F:GLenum;readonly R16F:GLenum;readonly R16I:GLenum;readonly R16UI:GLenum;readonly R32F:GLenum;readonly R32I:GLenum;readonly R32UI:GLenum;readonly R8:GLenum;readonly R8I:GLenum;readonly R8UI:GLenum;readonly R8_SNORM:GLenum;readonly RASTERIZER_DISCARD:GLenum;readonly READ_BUFFER:GLenum;readonly READ_FRAMEBUFFER:GLenum;readonly READ_FRAMEBUFFER_BINDING:GLenum;readonly RED:GLenum;readonly RED_INTEGER:GLenum;readonly RENDERBUFFER_SAMPLES:GLenum;readonly RG:GLenum;readonly RG16F:GLenum;readonly RG16I:GLenum;readonly RG16UI:GLenum;readonly RG32F:GLenum;readonly RG32I:GLenum;readonly RG32UI:GLenum;readonly RG8:GLenum;readonly RG8I:GLenum;readonly RG8UI:GLenum;readonly RG8_SNORM:GLenum;readonly RGB10_A2:GLenum;readonly RGB10_A2UI:GLenum;readonly RGB16F:GLenum;readonly RGB16I:GLenum;readonly RGB16UI:GLenum;readonly RGB32F:GLenum;readonly RGB32I:GLenum;readonly RGB32UI:GLenum;readonly RGB8:GLenum;readonly RGB8I:GLenum;readonly RGB8UI:GLenum;readonly RGB8_SNORM:GLenum;readonly RGB9_E5:GLenum;readonly RGBA16F:GLenum;readonly RGBA16I:GLenum;readonly RGBA16UI:GLenum;readonly RGBA32F:GLenum;readonly RGBA32I:GLenum;readonly RGBA32UI:GLenum;readonly RGBA8:GLenum;readonly RGBA8I:GLenum;readonly RGBA8UI:GLenum;readonly RGBA8_SNORM:GLenum;readonly RGBA_INTEGER:GLenum;readonly RGB_INTEGER:GLenum;readonly RG_INTEGER:GLenum;readonly SAMPLER_2D_ARRAY:GLenum;readonly SAMPLER_2D_ARRAY_SHADOW:GLenum;readonly SAMPLER_2D_SHADOW:GLenum;readonly SAMPLER_3D:GLenum;readonly SAMPLER_BINDING:GLenum;readonly SAMPLER_CUBE_SHADOW:GLenum;readonly SEPARATE_ATTRIBS:GLenum;readonly SIGNALED:GLenum;readonly SIGNED_NORMALIZED:GLenum;readonly SRGB:GLenum;readonly SRGB8:GLenum;readonly SRGB8_ALPHA8:GLenum;readonly STATIC_COPY:GLenum;readonly STATIC_READ:GLenum;readonly STENCIL:GLenum;readonly STREAM_COPY:GLenum;readonly STREAM_READ:GLenum;readonly SYNC_CONDITION:GLenum;readonly SYNC_FENCE:GLenum;readonly SYNC_FLAGS:GLenum;readonly SYNC_FLUSH_COMMANDS_BIT:GLenum;readonly SYNC_GPU_COMMANDS_COMPLETE:GLenum;readonly SYNC_STATUS:GLenum;readonly TEXTURE_2D_ARRAY:GLenum;readonly TEXTURE_3D:GLenum;readonly TEXTURE_BASE_LEVEL:GLenum;readonly TEXTURE_BINDING_2D_ARRAY:GLenum;readonly TEXTURE_BINDING_3D:GLenum;readonly TEXTURE_COMPARE_FUNC:GLenum;readonly TEXTURE_COMPARE_MODE:GLenum;readonly TEXTURE_IMMUTABLE_FORMAT:GLenum;readonly TEXTURE_IMMUTABLE_LEVELS:GLenum;readonly TEXTURE_MAX_LEVEL:GLenum;readonly TEXTURE_MAX_LOD:GLenum;readonly TEXTURE_MIN_LOD:GLenum;readonly TEXTURE_WRAP_R:GLenum;readonly TIMEOUT_EXPIRED:GLenum;readonly TIMEOUT_IGNORED:GLint64;readonly TRANSFORM_FEEDBACK:GLenum;readonly TRANSFORM_FEEDBACK_ACTIVE:GLenum;readonly TRANSFORM_FEEDBACK_BINDING:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_BINDING:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_MODE:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_SIZE:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_START:GLenum;readonly TRANSFORM_FEEDBACK_PAUSED:GLenum;readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN:GLenum;readonly TRANSFORM_FEEDBACK_VARYINGS:GLenum;readonly UNIFORM_ARRAY_STRIDE:GLenum;readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS:GLenum;readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES:GLenum;readonly UNIFORM_BLOCK_BINDING:GLenum;readonly UNIFORM_BLOCK_DATA_SIZE:GLenum;readonly UNIFORM_BLOCK_INDEX:GLenum;readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER:GLenum;readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER:GLenum;readonly UNIFORM_BUFFER:GLenum;readonly UNIFORM_BUFFER_BINDING:GLenum;readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT:GLenum;readonly UNIFORM_BUFFER_SIZE:GLenum;readonly UNIFORM_BUFFER_START:GLenum;readonly UNIFORM_IS_ROW_MAJOR:GLenum;readonly UNIFORM_MATRIX_STRIDE:GLenum;readonly UNIFORM_OFFSET:GLenum;readonly UNIFORM_SIZE:GLenum;readonly UNIFORM_TYPE:GLenum;readonly UNPACK_IMAGE_HEIGHT:GLenum;readonly UNPACK_ROW_LENGTH:GLenum;readonly UNPACK_SKIP_IMAGES:GLenum;readonly UNPACK_SKIP_PIXELS:GLenum;readonly UNPACK_SKIP_ROWS:GLenum;readonly UNSIGNALED:GLenum;readonly UNSIGNED_INT_10F_11F_11F_REV:GLenum;readonly UNSIGNED_INT_24_8:GLenum;readonly UNSIGNED_INT_2_10_10_10_REV:GLenum;readonly UNSIGNED_INT_5_9_9_9_REV:GLenum;readonly UNSIGNED_INT_SAMPLER_2D:GLenum;readonly UNSIGNED_INT_SAMPLER_2D_ARRAY:GLenum;readonly UNSIGNED_INT_SAMPLER_3D:GLenum;readonly UNSIGNED_INT_SAMPLER_CUBE:GLenum;readonly UNSIGNED_INT_VEC2:GLenum;readonly UNSIGNED_INT_VEC3:GLenum;readonly UNSIGNED_INT_VEC4:GLenum;readonly UNSIGNED_NORMALIZED:GLenum;readonly VERTEX_ARRAY_BINDING:GLenum;readonly VERTEX_ATTRIB_ARRAY_DIVISOR:GLenum;readonly VERTEX_ATTRIB_ARRAY_INTEGER:GLenum;readonly WAIT_FAILED:GLenum;};interface WebGL2RenderingContextBase{beginQuery(target:GLenum,query:WebGLQuery):void;beginTransformFeedback(primitiveMode:GLenum):void;bindBufferBase(target:GLenum,index:GLuint,buffer:WebGLBuffer|null):void;bindBufferRange(target:GLenum,index:GLuint,buffer:WebGLBuffer|null,offset:GLintptr,size:GLsizeiptr):void;bindSampler(unit:GLuint,sampler:WebGLSampler|null):void;bindTransformFeedback(target:GLenum,tf:WebGLTransformFeedback|null):void;bindVertexArray(array:WebGLVertexArrayObject|null):void;blitFramebuffer(srcX0:GLint,srcY0:GLint,srcX1:GLint,srcY1:GLint,dstX0:GLint,dstY0:GLint,dstX1:GLint,dstY1:GLint,mask:GLbitfield,filter:GLenum):void;clearBufferfi(buffer:GLenum,drawbuffer:GLint,depth:GLfloat,stencil:GLint):void;clearBufferfv(buffer:GLenum,drawbuffer:GLint,values:Float32List,srcOffset?:GLuint):void;clearBufferiv(buffer:GLenum,drawbuffer:GLint,values:Int32List,srcOffset?:GLuint):void;clearBufferuiv(buffer:GLenum,drawbuffer:GLint,values:Uint32List,srcOffset?:GLuint):void;clientWaitSync(sync:WebGLSync,flags:GLbitfield,timeout:GLuint64):GLenum;compressedTexImage3D(target:GLenum,level:GLint,internalformat:GLenum,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,imageSize:GLsizei,offset:GLintptr):void;compressedTexImage3D(target:GLenum,level:GLint,internalformat:GLenum,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,srcData:ArrayBufferView,srcOffset?:GLuint,srcLengthOverride?:GLuint):void;compressedTexSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,format:GLenum,imageSize:GLsizei,offset:GLintptr):void;compressedTexSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,format:GLenum,srcData:ArrayBufferView,srcOffset?:GLuint,srcLengthOverride?:GLuint):void;copyBufferSubData(readTarget:GLenum,writeTarget:GLenum,readOffset:GLintptr,writeOffset:GLintptr,size:GLsizeiptr):void;copyTexSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,x:GLint,y:GLint,width:GLsizei,height:GLsizei):void;createQuery():WebGLQuery|null;createSampler():WebGLSampler|null;createTransformFeedback():WebGLTransformFeedback|null;createVertexArray():WebGLVertexArrayObject|null;deleteQuery(query:WebGLQuery|null):void;deleteSampler(sampler:WebGLSampler|null):void;deleteSync(sync:WebGLSync|null):void;deleteTransformFeedback(tf:WebGLTransformFeedback|null):void;deleteVertexArray(vertexArray:WebGLVertexArrayObject|null):void;drawArraysInstanced(mode:GLenum,first:GLint,count:GLsizei,instanceCount:GLsizei):void;drawBuffers(buffers:GLenum[]):void;drawElementsInstanced(mode:GLenum,count:GLsizei,type:GLenum,offset:GLintptr,instanceCount:GLsizei):void;drawRangeElements(mode:GLenum,start:GLuint,end:GLuint,count:GLsizei,type:GLenum,offset:GLintptr):void;endQuery(target:GLenum):void;endTransformFeedback():void;fenceSync(condition:GLenum,flags:GLbitfield):WebGLSync|null;framebufferTextureLayer(target:GLenum,attachment:GLenum,texture:WebGLTexture|null,level:GLint,layer:GLint):void;getActiveUniformBlockName(program:WebGLProgram,uniformBlockIndex:GLuint):string|null;getActiveUniformBlockParameter(program:WebGLProgram,uniformBlockIndex:GLuint,pname:GLenum):any;getActiveUniforms(program:WebGLProgram,uniformIndices:GLuint[],pname:GLenum):any;getBufferSubData(target:GLenum,srcByteOffset:GLintptr,dstBuffer:ArrayBufferView,dstOffset?:GLuint,length?:GLuint):void;getFragDataLocation(program:WebGLProgram,name:string):GLint;getIndexedParameter(target:GLenum,index:GLuint):any;getInternalformatParameter(target:GLenum,internalformat:GLenum,pname:GLenum):any;getQuery(target:GLenum,pname:GLenum):WebGLQuery|null;getQueryParameter(query:WebGLQuery,pname:GLenum):any;getSamplerParameter(sampler:WebGLSampler,pname:GLenum):any;getSyncParameter(sync:WebGLSync,pname:GLenum):any;getTransformFeedbackVarying(program:WebGLProgram,index:GLuint):WebGLActiveInfo|null;getUniformBlockIndex(program:WebGLProgram,uniformBlockName:string):GLuint;getUniformIndices(program:WebGLProgram,uniformNames:string[]):GLuint[]|null;invalidateFramebuffer(target:GLenum,attachments:GLenum[]):void;invalidateSubFramebuffer(target:GLenum,attachments:GLenum[],x:GLint,y:GLint,width:GLsizei,height:GLsizei):void;isQuery(query:WebGLQuery|null):GLboolean;isSampler(sampler:WebGLSampler|null):GLboolean;isSync(sync:WebGLSync|null):GLboolean;isTransformFeedback(tf:WebGLTransformFeedback|null):GLboolean;isVertexArray(vertexArray:WebGLVertexArrayObject|null):GLboolean;pauseTransformFeedback():void;readBuffer(src:GLenum):void;renderbufferStorageMultisample(target:GLenum,samples:GLsizei,internalformat:GLenum,width:GLsizei,height:GLsizei):void;resumeTransformFeedback():void;samplerParameterf(sampler:WebGLSampler,pname:GLenum,param:GLfloat):void;samplerParameteri(sampler:WebGLSampler,pname:GLenum,param:GLint):void;texImage3D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,format:GLenum,type:GLenum,pboOffset:GLintptr):void;texImage3D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;texImage3D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,format:GLenum,type:GLenum,srcData:ArrayBufferView|null):void;texImage3D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,border:GLint,format:GLenum,type:GLenum,srcData:ArrayBufferView,srcOffset:GLuint):void;texStorage2D(target:GLenum,levels:GLsizei,internalformat:GLenum,width:GLsizei,height:GLsizei):void;texStorage3D(target:GLenum,levels:GLsizei,internalformat:GLenum,width:GLsizei,height:GLsizei,depth:GLsizei):void;texSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,format:GLenum,type:GLenum,pboOffset:GLintptr):void;texSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,format:GLenum,type:GLenum,source:TexImageSource):void;texSubImage3D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,zoffset:GLint,width:GLsizei,height:GLsizei,depth:GLsizei,format:GLenum,type:GLenum,srcData:ArrayBufferView|null,srcOffset?:GLuint):void;transformFeedbackVaryings(program:WebGLProgram,varyings:string[],bufferMode:GLenum):void;uniform1ui(location:WebGLUniformLocation|null,v0:GLuint):void;uniform1uiv(location:WebGLUniformLocation|null,data:Uint32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform2ui(location:WebGLUniformLocation|null,v0:GLuint,v1:GLuint):void;uniform2uiv(location:WebGLUniformLocation|null,data:Uint32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform3ui(location:WebGLUniformLocation|null,v0:GLuint,v1:GLuint,v2:GLuint):void;uniform3uiv(location:WebGLUniformLocation|null,data:Uint32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform4ui(location:WebGLUniformLocation|null,v0:GLuint,v1:GLuint,v2:GLuint,v3:GLuint):void;uniform4uiv(location:WebGLUniformLocation|null,data:Uint32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformBlockBinding(program:WebGLProgram,uniformBlockIndex:GLuint,uniformBlockBinding:GLuint):void;uniformMatrix2x3fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix2x4fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix3x2fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix3x4fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix4x2fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix4x3fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;vertexAttribDivisor(index:GLuint,divisor:GLuint):void;vertexAttribI4i(index:GLuint,x:GLint,y:GLint,z:GLint,w:GLint):void;vertexAttribI4iv(index:GLuint,values:Int32List):void;vertexAttribI4ui(index:GLuint,x:GLuint,y:GLuint,z:GLuint,w:GLuint):void;vertexAttribI4uiv(index:GLuint,values:Uint32List):void;vertexAttribIPointer(index:GLuint,size:GLint,type:GLenum,stride:GLsizei,offset:GLintptr):void;waitSync(sync:WebGLSync,flags:GLbitfield,timeout:GLint64):void;readonly ACTIVE_UNIFORM_BLOCKS:GLenum;readonly ALREADY_SIGNALED:GLenum;readonly ANY_SAMPLES_PASSED:GLenum;readonly ANY_SAMPLES_PASSED_CONSERVATIVE:GLenum;readonly COLOR:GLenum;readonly COLOR_ATTACHMENT1:GLenum;readonly COLOR_ATTACHMENT10:GLenum;readonly COLOR_ATTACHMENT11:GLenum;readonly COLOR_ATTACHMENT12:GLenum;readonly COLOR_ATTACHMENT13:GLenum;readonly COLOR_ATTACHMENT14:GLenum;readonly COLOR_ATTACHMENT15:GLenum;readonly COLOR_ATTACHMENT2:GLenum;readonly COLOR_ATTACHMENT3:GLenum;readonly COLOR_ATTACHMENT4:GLenum;readonly COLOR_ATTACHMENT5:GLenum;readonly COLOR_ATTACHMENT6:GLenum;readonly COLOR_ATTACHMENT7:GLenum;readonly COLOR_ATTACHMENT8:GLenum;readonly COLOR_ATTACHMENT9:GLenum;readonly COMPARE_REF_TO_TEXTURE:GLenum;readonly CONDITION_SATISFIED:GLenum;readonly COPY_READ_BUFFER:GLenum;readonly COPY_READ_BUFFER_BINDING:GLenum;readonly COPY_WRITE_BUFFER:GLenum;readonly COPY_WRITE_BUFFER_BINDING:GLenum;readonly CURRENT_QUERY:GLenum;readonly DEPTH:GLenum;readonly DEPTH24_STENCIL8:GLenum;readonly DEPTH32F_STENCIL8:GLenum;readonly DEPTH_COMPONENT24:GLenum;readonly DEPTH_COMPONENT32F:GLenum;readonly DRAW_BUFFER0:GLenum;readonly DRAW_BUFFER1:GLenum;readonly DRAW_BUFFER10:GLenum;readonly DRAW_BUFFER11:GLenum;readonly DRAW_BUFFER12:GLenum;readonly DRAW_BUFFER13:GLenum;readonly DRAW_BUFFER14:GLenum;readonly DRAW_BUFFER15:GLenum;readonly DRAW_BUFFER2:GLenum;readonly DRAW_BUFFER3:GLenum;readonly DRAW_BUFFER4:GLenum;readonly DRAW_BUFFER5:GLenum;readonly DRAW_BUFFER6:GLenum;readonly DRAW_BUFFER7:GLenum;readonly DRAW_BUFFER8:GLenum;readonly DRAW_BUFFER9:GLenum;readonly DRAW_FRAMEBUFFER:GLenum;readonly DRAW_FRAMEBUFFER_BINDING:GLenum;readonly DYNAMIC_COPY:GLenum;readonly DYNAMIC_READ:GLenum;readonly FLOAT_32_UNSIGNED_INT_24_8_REV:GLenum;readonly FLOAT_MAT2x3:GLenum;readonly FLOAT_MAT2x4:GLenum;readonly FLOAT_MAT3x2:GLenum;readonly FLOAT_MAT3x4:GLenum;readonly FLOAT_MAT4x2:GLenum;readonly FLOAT_MAT4x3:GLenum;readonly FRAGMENT_SHADER_DERIVATIVE_HINT:GLenum;readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING:GLenum;readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER:GLenum;readonly FRAMEBUFFER_DEFAULT:GLenum;readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:GLenum;readonly HALF_FLOAT:GLenum;readonly INTERLEAVED_ATTRIBS:GLenum;readonly INT_2_10_10_10_REV:GLenum;readonly INT_SAMPLER_2D:GLenum;readonly INT_SAMPLER_2D_ARRAY:GLenum;readonly INT_SAMPLER_3D:GLenum;readonly INT_SAMPLER_CUBE:GLenum;readonly INVALID_INDEX:GLenum;readonly MAX:GLenum;readonly MAX_3D_TEXTURE_SIZE:GLenum;readonly MAX_ARRAY_TEXTURE_LAYERS:GLenum;readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL:GLenum;readonly MAX_COLOR_ATTACHMENTS:GLenum;readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS:GLenum;readonly MAX_COMBINED_UNIFORM_BLOCKS:GLenum;readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS:GLenum;readonly MAX_DRAW_BUFFERS:GLenum;readonly MAX_ELEMENTS_INDICES:GLenum;readonly MAX_ELEMENTS_VERTICES:GLenum;readonly MAX_ELEMENT_INDEX:GLenum;readonly MAX_FRAGMENT_INPUT_COMPONENTS:GLenum;readonly MAX_FRAGMENT_UNIFORM_BLOCKS:GLenum;readonly MAX_FRAGMENT_UNIFORM_COMPONENTS:GLenum;readonly MAX_PROGRAM_TEXEL_OFFSET:GLenum;readonly MAX_SAMPLES:GLenum;readonly MAX_SERVER_WAIT_TIMEOUT:GLenum;readonly MAX_TEXTURE_LOD_BIAS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS:GLenum;readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS:GLenum;readonly MAX_UNIFORM_BLOCK_SIZE:GLenum;readonly MAX_UNIFORM_BUFFER_BINDINGS:GLenum;readonly MAX_VARYING_COMPONENTS:GLenum;readonly MAX_VERTEX_OUTPUT_COMPONENTS:GLenum;readonly MAX_VERTEX_UNIFORM_BLOCKS:GLenum;readonly MAX_VERTEX_UNIFORM_COMPONENTS:GLenum;readonly MIN:GLenum;readonly MIN_PROGRAM_TEXEL_OFFSET:GLenum;readonly OBJECT_TYPE:GLenum;readonly PACK_ROW_LENGTH:GLenum;readonly PACK_SKIP_PIXELS:GLenum;readonly PACK_SKIP_ROWS:GLenum;readonly PIXEL_PACK_BUFFER:GLenum;readonly PIXEL_PACK_BUFFER_BINDING:GLenum;readonly PIXEL_UNPACK_BUFFER:GLenum;readonly PIXEL_UNPACK_BUFFER_BINDING:GLenum;readonly QUERY_RESULT:GLenum;readonly QUERY_RESULT_AVAILABLE:GLenum;readonly R11F_G11F_B10F:GLenum;readonly R16F:GLenum;readonly R16I:GLenum;readonly R16UI:GLenum;readonly R32F:GLenum;readonly R32I:GLenum;readonly R32UI:GLenum;readonly R8:GLenum;readonly R8I:GLenum;readonly R8UI:GLenum;readonly R8_SNORM:GLenum;readonly RASTERIZER_DISCARD:GLenum;readonly READ_BUFFER:GLenum;readonly READ_FRAMEBUFFER:GLenum;readonly READ_FRAMEBUFFER_BINDING:GLenum;readonly RED:GLenum;readonly RED_INTEGER:GLenum;readonly RENDERBUFFER_SAMPLES:GLenum;readonly RG:GLenum;readonly RG16F:GLenum;readonly RG16I:GLenum;readonly RG16UI:GLenum;readonly RG32F:GLenum;readonly RG32I:GLenum;readonly RG32UI:GLenum;readonly RG8:GLenum;readonly RG8I:GLenum;readonly RG8UI:GLenum;readonly RG8_SNORM:GLenum;readonly RGB10_A2:GLenum;readonly RGB10_A2UI:GLenum;readonly RGB16F:GLenum;readonly RGB16I:GLenum;readonly RGB16UI:GLenum;readonly RGB32F:GLenum;readonly RGB32I:GLenum;readonly RGB32UI:GLenum;readonly RGB8:GLenum;readonly RGB8I:GLenum;readonly RGB8UI:GLenum;readonly RGB8_SNORM:GLenum;readonly RGB9_E5:GLenum;readonly RGBA16F:GLenum;readonly RGBA16I:GLenum;readonly RGBA16UI:GLenum;readonly RGBA32F:GLenum;readonly RGBA32I:GLenum;readonly RGBA32UI:GLenum;readonly RGBA8:GLenum;readonly RGBA8I:GLenum;readonly RGBA8UI:GLenum;readonly RGBA8_SNORM:GLenum;readonly RGBA_INTEGER:GLenum;readonly RGB_INTEGER:GLenum;readonly RG_INTEGER:GLenum;readonly SAMPLER_2D_ARRAY:GLenum;readonly SAMPLER_2D_ARRAY_SHADOW:GLenum;readonly SAMPLER_2D_SHADOW:GLenum;readonly SAMPLER_3D:GLenum;readonly SAMPLER_BINDING:GLenum;readonly SAMPLER_CUBE_SHADOW:GLenum;readonly SEPARATE_ATTRIBS:GLenum;readonly SIGNALED:GLenum;readonly SIGNED_NORMALIZED:GLenum;readonly SRGB:GLenum;readonly SRGB8:GLenum;readonly SRGB8_ALPHA8:GLenum;readonly STATIC_COPY:GLenum;readonly STATIC_READ:GLenum;readonly STENCIL:GLenum;readonly STREAM_COPY:GLenum;readonly STREAM_READ:GLenum;readonly SYNC_CONDITION:GLenum;readonly SYNC_FENCE:GLenum;readonly SYNC_FLAGS:GLenum;readonly SYNC_FLUSH_COMMANDS_BIT:GLenum;readonly SYNC_GPU_COMMANDS_COMPLETE:GLenum;readonly SYNC_STATUS:GLenum;readonly TEXTURE_2D_ARRAY:GLenum;readonly TEXTURE_3D:GLenum;readonly TEXTURE_BASE_LEVEL:GLenum;readonly TEXTURE_BINDING_2D_ARRAY:GLenum;readonly TEXTURE_BINDING_3D:GLenum;readonly TEXTURE_COMPARE_FUNC:GLenum;readonly TEXTURE_COMPARE_MODE:GLenum;readonly TEXTURE_IMMUTABLE_FORMAT:GLenum;readonly TEXTURE_IMMUTABLE_LEVELS:GLenum;readonly TEXTURE_MAX_LEVEL:GLenum;readonly TEXTURE_MAX_LOD:GLenum;readonly TEXTURE_MIN_LOD:GLenum;readonly TEXTURE_WRAP_R:GLenum;readonly TIMEOUT_EXPIRED:GLenum;readonly TIMEOUT_IGNORED:GLint64;readonly TRANSFORM_FEEDBACK:GLenum;readonly TRANSFORM_FEEDBACK_ACTIVE:GLenum;readonly TRANSFORM_FEEDBACK_BINDING:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_BINDING:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_MODE:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_SIZE:GLenum;readonly TRANSFORM_FEEDBACK_BUFFER_START:GLenum;readonly TRANSFORM_FEEDBACK_PAUSED:GLenum;readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN:GLenum;readonly TRANSFORM_FEEDBACK_VARYINGS:GLenum;readonly UNIFORM_ARRAY_STRIDE:GLenum;readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS:GLenum;readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES:GLenum;readonly UNIFORM_BLOCK_BINDING:GLenum;readonly UNIFORM_BLOCK_DATA_SIZE:GLenum;readonly UNIFORM_BLOCK_INDEX:GLenum;readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER:GLenum;readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER:GLenum;readonly UNIFORM_BUFFER:GLenum;readonly UNIFORM_BUFFER_BINDING:GLenum;readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT:GLenum;readonly UNIFORM_BUFFER_SIZE:GLenum;readonly UNIFORM_BUFFER_START:GLenum;readonly UNIFORM_IS_ROW_MAJOR:GLenum;readonly UNIFORM_MATRIX_STRIDE:GLenum;readonly UNIFORM_OFFSET:GLenum;readonly UNIFORM_SIZE:GLenum;readonly UNIFORM_TYPE:GLenum;readonly UNPACK_IMAGE_HEIGHT:GLenum;readonly UNPACK_ROW_LENGTH:GLenum;readonly UNPACK_SKIP_IMAGES:GLenum;readonly UNPACK_SKIP_PIXELS:GLenum;readonly UNPACK_SKIP_ROWS:GLenum;readonly UNSIGNALED:GLenum;readonly UNSIGNED_INT_10F_11F_11F_REV:GLenum;readonly UNSIGNED_INT_24_8:GLenum;readonly UNSIGNED_INT_2_10_10_10_REV:GLenum;readonly UNSIGNED_INT_5_9_9_9_REV:GLenum;readonly UNSIGNED_INT_SAMPLER_2D:GLenum;readonly UNSIGNED_INT_SAMPLER_2D_ARRAY:GLenum;readonly UNSIGNED_INT_SAMPLER_3D:GLenum;readonly UNSIGNED_INT_SAMPLER_CUBE:GLenum;readonly UNSIGNED_INT_VEC2:GLenum;readonly UNSIGNED_INT_VEC3:GLenum;readonly UNSIGNED_INT_VEC4:GLenum;readonly UNSIGNED_NORMALIZED:GLenum;readonly VERTEX_ARRAY_BINDING:GLenum;readonly VERTEX_ATTRIB_ARRAY_DIVISOR:GLenum;readonly VERTEX_ATTRIB_ARRAY_INTEGER:GLenum;readonly WAIT_FAILED:GLenum;}interface WebGL2RenderingContextOverloads{bufferData(target:GLenum,size:GLsizeiptr,usage:GLenum):void;bufferData(target:GLenum,srcData:BufferSource|null,usage:GLenum):void;bufferData(target:GLenum,srcData:ArrayBufferView,usage:GLenum,srcOffset:GLuint,length?:GLuint):void;bufferSubData(target:GLenum,dstByteOffset:GLintptr,srcData:BufferSource):void;bufferSubData(target:GLenum,dstByteOffset:GLintptr,srcData:ArrayBufferView,srcOffset:GLuint,length?:GLuint):void;compressedTexImage2D(target:GLenum,level:GLint,internalformat:GLenum,width:GLsizei,height:GLsizei,border:GLint,imageSize:GLsizei,offset:GLintptr):void;compressedTexImage2D(target:GLenum,level:GLint,internalformat:GLenum,width:GLsizei,height:GLsizei,border:GLint,srcData:ArrayBufferView,srcOffset?:GLuint,srcLengthOverride?:GLuint):void;compressedTexSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,imageSize:GLsizei,offset:GLintptr):void;compressedTexSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,srcData:ArrayBufferView,srcOffset?:GLuint,srcLengthOverride?:GLuint):void;readPixels(x:GLint,y:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,dstData:ArrayBufferView|null):void;readPixels(x:GLint,y:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,offset:GLintptr):void;readPixels(x:GLint,y:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,dstData:ArrayBufferView,dstOffset:GLuint):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,border:GLint,format:GLenum,type:GLenum,pixels:ArrayBufferView|null):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,border:GLint,format:GLenum,type:GLenum,pboOffset:GLintptr):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,border:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,border:GLint,format:GLenum,type:GLenum,srcData:ArrayBufferView,srcOffset:GLuint):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,pixels:ArrayBufferView|null):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,pboOffset:GLintptr):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,source:TexImageSource):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,srcData:ArrayBufferView,srcOffset:GLuint):void;uniform1fv(location:WebGLUniformLocation|null,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform1iv(location:WebGLUniformLocation|null,data:Int32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform2fv(location:WebGLUniformLocation|null,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform2iv(location:WebGLUniformLocation|null,data:Int32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform3fv(location:WebGLUniformLocation|null,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform3iv(location:WebGLUniformLocation|null,data:Int32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform4fv(location:WebGLUniformLocation|null,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniform4iv(location:WebGLUniformLocation|null,data:Int32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix2fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix3fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;uniformMatrix4fv(location:WebGLUniformLocation|null,transpose:GLboolean,data:Float32List,srcOffset?:GLuint,srcLength?:GLuint):void;}interface WebGLActiveInfo{readonly name:string;readonly size:GLint;readonly type:GLenum;}declare var WebGLActiveInfo:{prototype:WebGLActiveInfo;new():WebGLActiveInfo;};interface WebGLBuffer extends WebGLObject{}declare var WebGLBuffer:{prototype:WebGLBuffer;new():WebGLBuffer;};interface WebGLContextEvent extends Event{readonly statusMessage:string;}declare var WebGLContextEvent:{prototype:WebGLContextEvent;new(type:string,eventInit?:WebGLContextEventInit):WebGLContextEvent;};interface WebGLFramebuffer extends WebGLObject{}declare var WebGLFramebuffer:{prototype:WebGLFramebuffer;new():WebGLFramebuffer;};interface WebGLObject{}declare var WebGLObject:{prototype:WebGLObject;new():WebGLObject;};interface WebGLProgram extends WebGLObject{}declare var WebGLProgram:{prototype:WebGLProgram;new():WebGLProgram;};interface WebGLQuery extends WebGLObject{}declare var WebGLQuery:{prototype:WebGLQuery;new():WebGLQuery;};interface WebGLRenderbuffer extends WebGLObject{}declare var WebGLRenderbuffer:{prototype:WebGLRenderbuffer;new():WebGLRenderbuffer;};interface WebGLRenderingContext extends WebGLRenderingContextBase,WebGLRenderingContextOverloads{}declare var WebGLRenderingContext:{prototype:WebGLRenderingContext;new():WebGLRenderingContext;readonly ACTIVE_ATTRIBUTES:GLenum;readonly ACTIVE_TEXTURE:GLenum;readonly ACTIVE_UNIFORMS:GLenum;readonly ALIASED_LINE_WIDTH_RANGE:GLenum;readonly ALIASED_POINT_SIZE_RANGE:GLenum;readonly ALPHA:GLenum;readonly ALPHA_BITS:GLenum;readonly ALWAYS:GLenum;readonly ARRAY_BUFFER:GLenum;readonly ARRAY_BUFFER_BINDING:GLenum;readonly ATTACHED_SHADERS:GLenum;readonly BACK:GLenum;readonly BLEND:GLenum;readonly BLEND_COLOR:GLenum;readonly BLEND_DST_ALPHA:GLenum;readonly BLEND_DST_RGB:GLenum;readonly BLEND_EQUATION:GLenum;readonly BLEND_EQUATION_ALPHA:GLenum;readonly BLEND_EQUATION_RGB:GLenum;readonly BLEND_SRC_ALPHA:GLenum;readonly BLEND_SRC_RGB:GLenum;readonly BLUE_BITS:GLenum;readonly BOOL:GLenum;readonly BOOL_VEC2:GLenum;readonly BOOL_VEC3:GLenum;readonly BOOL_VEC4:GLenum;readonly BROWSER_DEFAULT_WEBGL:GLenum;readonly BUFFER_SIZE:GLenum;readonly BUFFER_USAGE:GLenum;readonly BYTE:GLenum;readonly CCW:GLenum;readonly CLAMP_TO_EDGE:GLenum;readonly COLOR_ATTACHMENT0:GLenum;readonly COLOR_BUFFER_BIT:GLenum;readonly COLOR_CLEAR_VALUE:GLenum;readonly COLOR_WRITEMASK:GLenum;readonly COMPILE_STATUS:GLenum;readonly COMPRESSED_TEXTURE_FORMATS:GLenum;readonly CONSTANT_ALPHA:GLenum;readonly CONSTANT_COLOR:GLenum;readonly CONTEXT_LOST_WEBGL:GLenum;readonly CULL_FACE:GLenum;readonly CULL_FACE_MODE:GLenum;readonly CURRENT_PROGRAM:GLenum;readonly CURRENT_VERTEX_ATTRIB:GLenum;readonly CW:GLenum;readonly DECR:GLenum;readonly DECR_WRAP:GLenum;readonly DELETE_STATUS:GLenum;readonly DEPTH_ATTACHMENT:GLenum;readonly DEPTH_BITS:GLenum;readonly DEPTH_BUFFER_BIT:GLenum;readonly DEPTH_CLEAR_VALUE:GLenum;readonly DEPTH_COMPONENT:GLenum;readonly DEPTH_COMPONENT16:GLenum;readonly DEPTH_FUNC:GLenum;readonly DEPTH_RANGE:GLenum;readonly DEPTH_STENCIL:GLenum;readonly DEPTH_STENCIL_ATTACHMENT:GLenum;readonly DEPTH_TEST:GLenum;readonly DEPTH_WRITEMASK:GLenum;readonly DITHER:GLenum;readonly DONT_CARE:GLenum;readonly DST_ALPHA:GLenum;readonly DST_COLOR:GLenum;readonly DYNAMIC_DRAW:GLenum;readonly ELEMENT_ARRAY_BUFFER:GLenum;readonly ELEMENT_ARRAY_BUFFER_BINDING:GLenum;readonly EQUAL:GLenum;readonly FASTEST:GLenum;readonly FLOAT:GLenum;readonly FLOAT_MAT2:GLenum;readonly FLOAT_MAT3:GLenum;readonly FLOAT_MAT4:GLenum;readonly FLOAT_VEC2:GLenum;readonly FLOAT_VEC3:GLenum;readonly FLOAT_VEC4:GLenum;readonly FRAGMENT_SHADER:GLenum;readonly FRAMEBUFFER:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:GLenum;readonly FRAMEBUFFER_BINDING:GLenum;readonly FRAMEBUFFER_COMPLETE:GLenum;readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT:GLenum;readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS:GLenum;readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:GLenum;readonly FRAMEBUFFER_UNSUPPORTED:GLenum;readonly FRONT:GLenum;readonly FRONT_AND_BACK:GLenum;readonly FRONT_FACE:GLenum;readonly FUNC_ADD:GLenum;readonly FUNC_REVERSE_SUBTRACT:GLenum;readonly FUNC_SUBTRACT:GLenum;readonly GENERATE_MIPMAP_HINT:GLenum;readonly GEQUAL:GLenum;readonly GREATER:GLenum;readonly GREEN_BITS:GLenum;readonly HIGH_FLOAT:GLenum;readonly HIGH_INT:GLenum;readonly IMPLEMENTATION_COLOR_READ_FORMAT:GLenum;readonly IMPLEMENTATION_COLOR_READ_TYPE:GLenum;readonly INCR:GLenum;readonly INCR_WRAP:GLenum;readonly INT:GLenum;readonly INT_VEC2:GLenum;readonly INT_VEC3:GLenum;readonly INT_VEC4:GLenum;readonly INVALID_ENUM:GLenum;readonly INVALID_FRAMEBUFFER_OPERATION:GLenum;readonly INVALID_OPERATION:GLenum;readonly INVALID_VALUE:GLenum;readonly INVERT:GLenum;readonly KEEP:GLenum;readonly LEQUAL:GLenum;readonly LESS:GLenum;readonly LINEAR:GLenum;readonly LINEAR_MIPMAP_LINEAR:GLenum;readonly LINEAR_MIPMAP_NEAREST:GLenum;readonly LINES:GLenum;readonly LINE_LOOP:GLenum;readonly LINE_STRIP:GLenum;readonly LINE_WIDTH:GLenum;readonly LINK_STATUS:GLenum;readonly LOW_FLOAT:GLenum;readonly LOW_INT:GLenum;readonly LUMINANCE:GLenum;readonly LUMINANCE_ALPHA:GLenum;readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_CUBE_MAP_TEXTURE_SIZE:GLenum;readonly MAX_FRAGMENT_UNIFORM_VECTORS:GLenum;readonly MAX_RENDERBUFFER_SIZE:GLenum;readonly MAX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_TEXTURE_SIZE:GLenum;readonly MAX_VARYING_VECTORS:GLenum;readonly MAX_VERTEX_ATTRIBS:GLenum;readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_VERTEX_UNIFORM_VECTORS:GLenum;readonly MAX_VIEWPORT_DIMS:GLenum;readonly MEDIUM_FLOAT:GLenum;readonly MEDIUM_INT:GLenum;readonly MIRRORED_REPEAT:GLenum;readonly NEAREST:GLenum;readonly NEAREST_MIPMAP_LINEAR:GLenum;readonly NEAREST_MIPMAP_NEAREST:GLenum;readonly NEVER:GLenum;readonly NICEST:GLenum;readonly NONE:GLenum;readonly NOTEQUAL:GLenum;readonly NO_ERROR:GLenum;readonly ONE:GLenum;readonly ONE_MINUS_CONSTANT_ALPHA:GLenum;readonly ONE_MINUS_CONSTANT_COLOR:GLenum;readonly ONE_MINUS_DST_ALPHA:GLenum;readonly ONE_MINUS_DST_COLOR:GLenum;readonly ONE_MINUS_SRC_ALPHA:GLenum;readonly ONE_MINUS_SRC_COLOR:GLenum;readonly OUT_OF_MEMORY:GLenum;readonly PACK_ALIGNMENT:GLenum;readonly POINTS:GLenum;readonly POLYGON_OFFSET_FACTOR:GLenum;readonly POLYGON_OFFSET_FILL:GLenum;readonly POLYGON_OFFSET_UNITS:GLenum;readonly RED_BITS:GLenum;readonly RENDERBUFFER:GLenum;readonly RENDERBUFFER_ALPHA_SIZE:GLenum;readonly RENDERBUFFER_BINDING:GLenum;readonly RENDERBUFFER_BLUE_SIZE:GLenum;readonly RENDERBUFFER_DEPTH_SIZE:GLenum;readonly RENDERBUFFER_GREEN_SIZE:GLenum;readonly RENDERBUFFER_HEIGHT:GLenum;readonly RENDERBUFFER_INTERNAL_FORMAT:GLenum;readonly RENDERBUFFER_RED_SIZE:GLenum;readonly RENDERBUFFER_STENCIL_SIZE:GLenum;readonly RENDERBUFFER_WIDTH:GLenum;readonly RENDERER:GLenum;readonly REPEAT:GLenum;readonly REPLACE:GLenum;readonly RGB:GLenum;readonly RGB565:GLenum;readonly RGB5_A1:GLenum;readonly RGBA:GLenum;readonly RGBA4:GLenum;readonly SAMPLER_2D:GLenum;readonly SAMPLER_CUBE:GLenum;readonly SAMPLES:GLenum;readonly SAMPLE_ALPHA_TO_COVERAGE:GLenum;readonly SAMPLE_BUFFERS:GLenum;readonly SAMPLE_COVERAGE:GLenum;readonly SAMPLE_COVERAGE_INVERT:GLenum;readonly SAMPLE_COVERAGE_VALUE:GLenum;readonly SCISSOR_BOX:GLenum;readonly SCISSOR_TEST:GLenum;readonly SHADER_TYPE:GLenum;readonly SHADING_LANGUAGE_VERSION:GLenum;readonly SHORT:GLenum;readonly SRC_ALPHA:GLenum;readonly SRC_ALPHA_SATURATE:GLenum;readonly SRC_COLOR:GLenum;readonly STATIC_DRAW:GLenum;readonly STENCIL_ATTACHMENT:GLenum;readonly STENCIL_BACK_FAIL:GLenum;readonly STENCIL_BACK_FUNC:GLenum;readonly STENCIL_BACK_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_BACK_PASS_DEPTH_PASS:GLenum;readonly STENCIL_BACK_REF:GLenum;readonly STENCIL_BACK_VALUE_MASK:GLenum;readonly STENCIL_BACK_WRITEMASK:GLenum;readonly STENCIL_BITS:GLenum;readonly STENCIL_BUFFER_BIT:GLenum;readonly STENCIL_CLEAR_VALUE:GLenum;readonly STENCIL_FAIL:GLenum;readonly STENCIL_FUNC:GLenum;readonly STENCIL_INDEX8:GLenum;readonly STENCIL_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_PASS_DEPTH_PASS:GLenum;readonly STENCIL_REF:GLenum;readonly STENCIL_TEST:GLenum;readonly STENCIL_VALUE_MASK:GLenum;readonly STENCIL_WRITEMASK:GLenum;readonly STREAM_DRAW:GLenum;readonly SUBPIXEL_BITS:GLenum;readonly TEXTURE:GLenum;readonly TEXTURE0:GLenum;readonly TEXTURE1:GLenum;readonly TEXTURE10:GLenum;readonly TEXTURE11:GLenum;readonly TEXTURE12:GLenum;readonly TEXTURE13:GLenum;readonly TEXTURE14:GLenum;readonly TEXTURE15:GLenum;readonly TEXTURE16:GLenum;readonly TEXTURE17:GLenum;readonly TEXTURE18:GLenum;readonly TEXTURE19:GLenum;readonly TEXTURE2:GLenum;readonly TEXTURE20:GLenum;readonly TEXTURE21:GLenum;readonly TEXTURE22:GLenum;readonly TEXTURE23:GLenum;readonly TEXTURE24:GLenum;readonly TEXTURE25:GLenum;readonly TEXTURE26:GLenum;readonly TEXTURE27:GLenum;readonly TEXTURE28:GLenum;readonly TEXTURE29:GLenum;readonly TEXTURE3:GLenum;readonly TEXTURE30:GLenum;readonly TEXTURE31:GLenum;readonly TEXTURE4:GLenum;readonly TEXTURE5:GLenum;readonly TEXTURE6:GLenum;readonly TEXTURE7:GLenum;readonly TEXTURE8:GLenum;readonly TEXTURE9:GLenum;readonly TEXTURE_2D:GLenum;readonly TEXTURE_BINDING_2D:GLenum;readonly TEXTURE_BINDING_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Z:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Z:GLenum;readonly TEXTURE_MAG_FILTER:GLenum;readonly TEXTURE_MIN_FILTER:GLenum;readonly TEXTURE_WRAP_S:GLenum;readonly TEXTURE_WRAP_T:GLenum;readonly TRIANGLES:GLenum;readonly TRIANGLE_FAN:GLenum;readonly TRIANGLE_STRIP:GLenum;readonly UNPACK_ALIGNMENT:GLenum;readonly UNPACK_COLORSPACE_CONVERSION_WEBGL:GLenum;readonly UNPACK_FLIP_Y_WEBGL:GLenum;readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL:GLenum;readonly UNSIGNED_BYTE:GLenum;readonly UNSIGNED_INT:GLenum;readonly UNSIGNED_SHORT:GLenum;readonly UNSIGNED_SHORT_4_4_4_4:GLenum;readonly UNSIGNED_SHORT_5_5_5_1:GLenum;readonly UNSIGNED_SHORT_5_6_5:GLenum;readonly VALIDATE_STATUS:GLenum;readonly VENDOR:GLenum;readonly VERSION:GLenum;readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:GLenum;readonly VERTEX_ATTRIB_ARRAY_ENABLED:GLenum;readonly VERTEX_ATTRIB_ARRAY_NORMALIZED:GLenum;readonly VERTEX_ATTRIB_ARRAY_POINTER:GLenum;readonly VERTEX_ATTRIB_ARRAY_SIZE:GLenum;readonly VERTEX_ATTRIB_ARRAY_STRIDE:GLenum;readonly VERTEX_ATTRIB_ARRAY_TYPE:GLenum;readonly VERTEX_SHADER:GLenum;readonly VIEWPORT:GLenum;readonly ZERO:GLenum;};interface WebGLRenderingContextBase{readonly canvas:OffscreenCanvas;readonly drawingBufferHeight:GLsizei;readonly drawingBufferWidth:GLsizei;activeTexture(texture:GLenum):void;attachShader(program:WebGLProgram,shader:WebGLShader):void;bindAttribLocation(program:WebGLProgram,index:GLuint,name:string):void;bindBuffer(target:GLenum,buffer:WebGLBuffer|null):void;bindFramebuffer(target:GLenum,framebuffer:WebGLFramebuffer|null):void;bindRenderbuffer(target:GLenum,renderbuffer:WebGLRenderbuffer|null):void;bindTexture(target:GLenum,texture:WebGLTexture|null):void;blendColor(red:GLclampf,green:GLclampf,blue:GLclampf,alpha:GLclampf):void;blendEquation(mode:GLenum):void;blendEquationSeparate(modeRGB:GLenum,modeAlpha:GLenum):void;blendFunc(sfactor:GLenum,dfactor:GLenum):void;blendFuncSeparate(srcRGB:GLenum,dstRGB:GLenum,srcAlpha:GLenum,dstAlpha:GLenum):void;checkFramebufferStatus(target:GLenum):GLenum;clear(mask:GLbitfield):void;clearColor(red:GLclampf,green:GLclampf,blue:GLclampf,alpha:GLclampf):void;clearDepth(depth:GLclampf):void;clearStencil(s:GLint):void;colorMask(red:GLboolean,green:GLboolean,blue:GLboolean,alpha:GLboolean):void;compileShader(shader:WebGLShader):void;copyTexImage2D(target:GLenum,level:GLint,internalformat:GLenum,x:GLint,y:GLint,width:GLsizei,height:GLsizei,border:GLint):void;copyTexSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,x:GLint,y:GLint,width:GLsizei,height:GLsizei):void;createBuffer():WebGLBuffer|null;createFramebuffer():WebGLFramebuffer|null;createProgram():WebGLProgram|null;createRenderbuffer():WebGLRenderbuffer|null;createShader(type:GLenum):WebGLShader|null;createTexture():WebGLTexture|null;cullFace(mode:GLenum):void;deleteBuffer(buffer:WebGLBuffer|null):void;deleteFramebuffer(framebuffer:WebGLFramebuffer|null):void;deleteProgram(program:WebGLProgram|null):void;deleteRenderbuffer(renderbuffer:WebGLRenderbuffer|null):void;deleteShader(shader:WebGLShader|null):void;deleteTexture(texture:WebGLTexture|null):void;depthFunc(func:GLenum):void;depthMask(flag:GLboolean):void;depthRange(zNear:GLclampf,zFar:GLclampf):void;detachShader(program:WebGLProgram,shader:WebGLShader):void;disable(cap:GLenum):void;disableVertexAttribArray(index:GLuint):void;drawArrays(mode:GLenum,first:GLint,count:GLsizei):void;drawElements(mode:GLenum,count:GLsizei,type:GLenum,offset:GLintptr):void;enable(cap:GLenum):void;enableVertexAttribArray(index:GLuint):void;finish():void;flush():void;framebufferRenderbuffer(target:GLenum,attachment:GLenum,renderbuffertarget:GLenum,renderbuffer:WebGLRenderbuffer|null):void;framebufferTexture2D(target:GLenum,attachment:GLenum,textarget:GLenum,texture:WebGLTexture|null,level:GLint):void;frontFace(mode:GLenum):void;generateMipmap(target:GLenum):void;getActiveAttrib(program:WebGLProgram,index:GLuint):WebGLActiveInfo|null;getActiveUniform(program:WebGLProgram,index:GLuint):WebGLActiveInfo|null;getAttachedShaders(program:WebGLProgram):WebGLShader[]|null;getAttribLocation(program:WebGLProgram,name:string):GLint;getBufferParameter(target:GLenum,pname:GLenum):any;getContextAttributes():WebGLContextAttributes|null;getError():GLenum;getExtension(extensionName:"EXT_blend_minmax"):EXT_blend_minmax|null;getExtension(extensionName:"EXT_texture_filter_anisotropic"):EXT_texture_filter_anisotropic|null;getExtension(extensionName:"EXT_frag_depth"):EXT_frag_depth|null;getExtension(extensionName:"EXT_shader_texture_lod"):EXT_shader_texture_lod|null;getExtension(extensionName:"EXT_sRGB"):EXT_sRGB|null;getExtension(extensionName:"OES_vertex_array_object"):OES_vertex_array_object|null;getExtension(extensionName:"WEBGL_color_buffer_float"):WEBGL_color_buffer_float|null;getExtension(extensionName:"WEBGL_compressed_texture_astc"):WEBGL_compressed_texture_astc|null;getExtension(extensionName:"WEBGL_compressed_texture_s3tc_srgb"):WEBGL_compressed_texture_s3tc_srgb|null;getExtension(extensionName:"WEBGL_debug_shaders"):WEBGL_debug_shaders|null;getExtension(extensionName:"WEBGL_draw_buffers"):WEBGL_draw_buffers|null;getExtension(extensionName:"WEBGL_lose_context"):WEBGL_lose_context|null;getExtension(extensionName:"WEBGL_depth_texture"):WEBGL_depth_texture|null;getExtension(extensionName:"WEBGL_debug_renderer_info"):WEBGL_debug_renderer_info|null;getExtension(extensionName:"WEBGL_compressed_texture_s3tc"):WEBGL_compressed_texture_s3tc|null;getExtension(extensionName:"OES_texture_half_float_linear"):OES_texture_half_float_linear|null;getExtension(extensionName:"OES_texture_half_float"):OES_texture_half_float|null;getExtension(extensionName:"OES_texture_float_linear"):OES_texture_float_linear|null;getExtension(extensionName:"OES_texture_float"):OES_texture_float|null;getExtension(extensionName:"OES_standard_derivatives"):OES_standard_derivatives|null;getExtension(extensionName:"OES_element_index_uint"):OES_element_index_uint|null;getExtension(extensionName:"ANGLE_instanced_arrays"):ANGLE_instanced_arrays|null;getExtension(extensionName:string):any;getFramebufferAttachmentParameter(target:GLenum,attachment:GLenum,pname:GLenum):any;getParameter(pname:GLenum):any;getProgramInfoLog(program:WebGLProgram):string|null;getProgramParameter(program:WebGLProgram,pname:GLenum):any;getRenderbufferParameter(target:GLenum,pname:GLenum):any;getShaderInfoLog(shader:WebGLShader):string|null;getShaderParameter(shader:WebGLShader,pname:GLenum):any;getShaderPrecisionFormat(shadertype:GLenum,precisiontype:GLenum):WebGLShaderPrecisionFormat|null;getShaderSource(shader:WebGLShader):string|null;getSupportedExtensions():string[]|null;getTexParameter(target:GLenum,pname:GLenum):any;getUniform(program:WebGLProgram,location:WebGLUniformLocation):any;getUniformLocation(program:WebGLProgram,name:string):WebGLUniformLocation|null;getVertexAttrib(index:GLuint,pname:GLenum):any;getVertexAttribOffset(index:GLuint,pname:GLenum):GLintptr;hint(target:GLenum,mode:GLenum):void;isBuffer(buffer:WebGLBuffer|null):GLboolean;isContextLost():boolean;isEnabled(cap:GLenum):GLboolean;isFramebuffer(framebuffer:WebGLFramebuffer|null):GLboolean;isProgram(program:WebGLProgram|null):GLboolean;isRenderbuffer(renderbuffer:WebGLRenderbuffer|null):GLboolean;isShader(shader:WebGLShader|null):GLboolean;isTexture(texture:WebGLTexture|null):GLboolean;lineWidth(width:GLfloat):void;linkProgram(program:WebGLProgram):void;pixelStorei(pname:GLenum,param:GLint|GLboolean):void;polygonOffset(factor:GLfloat,units:GLfloat):void;renderbufferStorage(target:GLenum,internalformat:GLenum,width:GLsizei,height:GLsizei):void;sampleCoverage(value:GLclampf,invert:GLboolean):void;scissor(x:GLint,y:GLint,width:GLsizei,height:GLsizei):void;shaderSource(shader:WebGLShader,source:string):void;stencilFunc(func:GLenum,ref:GLint,mask:GLuint):void;stencilFuncSeparate(face:GLenum,func:GLenum,ref:GLint,mask:GLuint):void;stencilMask(mask:GLuint):void;stencilMaskSeparate(face:GLenum,mask:GLuint):void;stencilOp(fail:GLenum,zfail:GLenum,zpass:GLenum):void;stencilOpSeparate(face:GLenum,fail:GLenum,zfail:GLenum,zpass:GLenum):void;texParameterf(target:GLenum,pname:GLenum,param:GLfloat):void;texParameteri(target:GLenum,pname:GLenum,param:GLint):void;uniform1f(location:WebGLUniformLocation|null,x:GLfloat):void;uniform1i(location:WebGLUniformLocation|null,x:GLint):void;uniform2f(location:WebGLUniformLocation|null,x:GLfloat,y:GLfloat):void;uniform2i(location:WebGLUniformLocation|null,x:GLint,y:GLint):void;uniform3f(location:WebGLUniformLocation|null,x:GLfloat,y:GLfloat,z:GLfloat):void;uniform3i(location:WebGLUniformLocation|null,x:GLint,y:GLint,z:GLint):void;uniform4f(location:WebGLUniformLocation|null,x:GLfloat,y:GLfloat,z:GLfloat,w:GLfloat):void;uniform4i(location:WebGLUniformLocation|null,x:GLint,y:GLint,z:GLint,w:GLint):void;useProgram(program:WebGLProgram|null):void;validateProgram(program:WebGLProgram):void;vertexAttrib1f(index:GLuint,x:GLfloat):void;vertexAttrib1fv(index:GLuint,values:Float32List):void;vertexAttrib2f(index:GLuint,x:GLfloat,y:GLfloat):void;vertexAttrib2fv(index:GLuint,values:Float32List):void;vertexAttrib3f(index:GLuint,x:GLfloat,y:GLfloat,z:GLfloat):void;vertexAttrib3fv(index:GLuint,values:Float32List):void;vertexAttrib4f(index:GLuint,x:GLfloat,y:GLfloat,z:GLfloat,w:GLfloat):void;vertexAttrib4fv(index:GLuint,values:Float32List):void;vertexAttribPointer(index:GLuint,size:GLint,type:GLenum,normalized:GLboolean,stride:GLsizei,offset:GLintptr):void;viewport(x:GLint,y:GLint,width:GLsizei,height:GLsizei):void;readonly ACTIVE_ATTRIBUTES:GLenum;readonly ACTIVE_TEXTURE:GLenum;readonly ACTIVE_UNIFORMS:GLenum;readonly ALIASED_LINE_WIDTH_RANGE:GLenum;readonly ALIASED_POINT_SIZE_RANGE:GLenum;readonly ALPHA:GLenum;readonly ALPHA_BITS:GLenum;readonly ALWAYS:GLenum;readonly ARRAY_BUFFER:GLenum;readonly ARRAY_BUFFER_BINDING:GLenum;readonly ATTACHED_SHADERS:GLenum;readonly BACK:GLenum;readonly BLEND:GLenum;readonly BLEND_COLOR:GLenum;readonly BLEND_DST_ALPHA:GLenum;readonly BLEND_DST_RGB:GLenum;readonly BLEND_EQUATION:GLenum;readonly BLEND_EQUATION_ALPHA:GLenum;readonly BLEND_EQUATION_RGB:GLenum;readonly BLEND_SRC_ALPHA:GLenum;readonly BLEND_SRC_RGB:GLenum;readonly BLUE_BITS:GLenum;readonly BOOL:GLenum;readonly BOOL_VEC2:GLenum;readonly BOOL_VEC3:GLenum;readonly BOOL_VEC4:GLenum;readonly BROWSER_DEFAULT_WEBGL:GLenum;readonly BUFFER_SIZE:GLenum;readonly BUFFER_USAGE:GLenum;readonly BYTE:GLenum;readonly CCW:GLenum;readonly CLAMP_TO_EDGE:GLenum;readonly COLOR_ATTACHMENT0:GLenum;readonly COLOR_BUFFER_BIT:GLenum;readonly COLOR_CLEAR_VALUE:GLenum;readonly COLOR_WRITEMASK:GLenum;readonly COMPILE_STATUS:GLenum;readonly COMPRESSED_TEXTURE_FORMATS:GLenum;readonly CONSTANT_ALPHA:GLenum;readonly CONSTANT_COLOR:GLenum;readonly CONTEXT_LOST_WEBGL:GLenum;readonly CULL_FACE:GLenum;readonly CULL_FACE_MODE:GLenum;readonly CURRENT_PROGRAM:GLenum;readonly CURRENT_VERTEX_ATTRIB:GLenum;readonly CW:GLenum;readonly DECR:GLenum;readonly DECR_WRAP:GLenum;readonly DELETE_STATUS:GLenum;readonly DEPTH_ATTACHMENT:GLenum;readonly DEPTH_BITS:GLenum;readonly DEPTH_BUFFER_BIT:GLenum;readonly DEPTH_CLEAR_VALUE:GLenum;readonly DEPTH_COMPONENT:GLenum;readonly DEPTH_COMPONENT16:GLenum;readonly DEPTH_FUNC:GLenum;readonly DEPTH_RANGE:GLenum;readonly DEPTH_STENCIL:GLenum;readonly DEPTH_STENCIL_ATTACHMENT:GLenum;readonly DEPTH_TEST:GLenum;readonly DEPTH_WRITEMASK:GLenum;readonly DITHER:GLenum;readonly DONT_CARE:GLenum;readonly DST_ALPHA:GLenum;readonly DST_COLOR:GLenum;readonly DYNAMIC_DRAW:GLenum;readonly ELEMENT_ARRAY_BUFFER:GLenum;readonly ELEMENT_ARRAY_BUFFER_BINDING:GLenum;readonly EQUAL:GLenum;readonly FASTEST:GLenum;readonly FLOAT:GLenum;readonly FLOAT_MAT2:GLenum;readonly FLOAT_MAT3:GLenum;readonly FLOAT_MAT4:GLenum;readonly FLOAT_VEC2:GLenum;readonly FLOAT_VEC3:GLenum;readonly FLOAT_VEC4:GLenum;readonly FRAGMENT_SHADER:GLenum;readonly FRAMEBUFFER:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:GLenum;readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:GLenum;readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:GLenum;readonly FRAMEBUFFER_BINDING:GLenum;readonly FRAMEBUFFER_COMPLETE:GLenum;readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT:GLenum;readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS:GLenum;readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:GLenum;readonly FRAMEBUFFER_UNSUPPORTED:GLenum;readonly FRONT:GLenum;readonly FRONT_AND_BACK:GLenum;readonly FRONT_FACE:GLenum;readonly FUNC_ADD:GLenum;readonly FUNC_REVERSE_SUBTRACT:GLenum;readonly FUNC_SUBTRACT:GLenum;readonly GENERATE_MIPMAP_HINT:GLenum;readonly GEQUAL:GLenum;readonly GREATER:GLenum;readonly GREEN_BITS:GLenum;readonly HIGH_FLOAT:GLenum;readonly HIGH_INT:GLenum;readonly IMPLEMENTATION_COLOR_READ_FORMAT:GLenum;readonly IMPLEMENTATION_COLOR_READ_TYPE:GLenum;readonly INCR:GLenum;readonly INCR_WRAP:GLenum;readonly INT:GLenum;readonly INT_VEC2:GLenum;readonly INT_VEC3:GLenum;readonly INT_VEC4:GLenum;readonly INVALID_ENUM:GLenum;readonly INVALID_FRAMEBUFFER_OPERATION:GLenum;readonly INVALID_OPERATION:GLenum;readonly INVALID_VALUE:GLenum;readonly INVERT:GLenum;readonly KEEP:GLenum;readonly LEQUAL:GLenum;readonly LESS:GLenum;readonly LINEAR:GLenum;readonly LINEAR_MIPMAP_LINEAR:GLenum;readonly LINEAR_MIPMAP_NEAREST:GLenum;readonly LINES:GLenum;readonly LINE_LOOP:GLenum;readonly LINE_STRIP:GLenum;readonly LINE_WIDTH:GLenum;readonly LINK_STATUS:GLenum;readonly LOW_FLOAT:GLenum;readonly LOW_INT:GLenum;readonly LUMINANCE:GLenum;readonly LUMINANCE_ALPHA:GLenum;readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_CUBE_MAP_TEXTURE_SIZE:GLenum;readonly MAX_FRAGMENT_UNIFORM_VECTORS:GLenum;readonly MAX_RENDERBUFFER_SIZE:GLenum;readonly MAX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_TEXTURE_SIZE:GLenum;readonly MAX_VARYING_VECTORS:GLenum;readonly MAX_VERTEX_ATTRIBS:GLenum;readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS:GLenum;readonly MAX_VERTEX_UNIFORM_VECTORS:GLenum;readonly MAX_VIEWPORT_DIMS:GLenum;readonly MEDIUM_FLOAT:GLenum;readonly MEDIUM_INT:GLenum;readonly MIRRORED_REPEAT:GLenum;readonly NEAREST:GLenum;readonly NEAREST_MIPMAP_LINEAR:GLenum;readonly NEAREST_MIPMAP_NEAREST:GLenum;readonly NEVER:GLenum;readonly NICEST:GLenum;readonly NONE:GLenum;readonly NOTEQUAL:GLenum;readonly NO_ERROR:GLenum;readonly ONE:GLenum;readonly ONE_MINUS_CONSTANT_ALPHA:GLenum;readonly ONE_MINUS_CONSTANT_COLOR:GLenum;readonly ONE_MINUS_DST_ALPHA:GLenum;readonly ONE_MINUS_DST_COLOR:GLenum;readonly ONE_MINUS_SRC_ALPHA:GLenum;readonly ONE_MINUS_SRC_COLOR:GLenum;readonly OUT_OF_MEMORY:GLenum;readonly PACK_ALIGNMENT:GLenum;readonly POINTS:GLenum;readonly POLYGON_OFFSET_FACTOR:GLenum;readonly POLYGON_OFFSET_FILL:GLenum;readonly POLYGON_OFFSET_UNITS:GLenum;readonly RED_BITS:GLenum;readonly RENDERBUFFER:GLenum;readonly RENDERBUFFER_ALPHA_SIZE:GLenum;readonly RENDERBUFFER_BINDING:GLenum;readonly RENDERBUFFER_BLUE_SIZE:GLenum;readonly RENDERBUFFER_DEPTH_SIZE:GLenum;readonly RENDERBUFFER_GREEN_SIZE:GLenum;readonly RENDERBUFFER_HEIGHT:GLenum;readonly RENDERBUFFER_INTERNAL_FORMAT:GLenum;readonly RENDERBUFFER_RED_SIZE:GLenum;readonly RENDERBUFFER_STENCIL_SIZE:GLenum;readonly RENDERBUFFER_WIDTH:GLenum;readonly RENDERER:GLenum;readonly REPEAT:GLenum;readonly REPLACE:GLenum;readonly RGB:GLenum;readonly RGB565:GLenum;readonly RGB5_A1:GLenum;readonly RGBA:GLenum;readonly RGBA4:GLenum;readonly SAMPLER_2D:GLenum;readonly SAMPLER_CUBE:GLenum;readonly SAMPLES:GLenum;readonly SAMPLE_ALPHA_TO_COVERAGE:GLenum;readonly SAMPLE_BUFFERS:GLenum;readonly SAMPLE_COVERAGE:GLenum;readonly SAMPLE_COVERAGE_INVERT:GLenum;readonly SAMPLE_COVERAGE_VALUE:GLenum;readonly SCISSOR_BOX:GLenum;readonly SCISSOR_TEST:GLenum;readonly SHADER_TYPE:GLenum;readonly SHADING_LANGUAGE_VERSION:GLenum;readonly SHORT:GLenum;readonly SRC_ALPHA:GLenum;readonly SRC_ALPHA_SATURATE:GLenum;readonly SRC_COLOR:GLenum;readonly STATIC_DRAW:GLenum;readonly STENCIL_ATTACHMENT:GLenum;readonly STENCIL_BACK_FAIL:GLenum;readonly STENCIL_BACK_FUNC:GLenum;readonly STENCIL_BACK_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_BACK_PASS_DEPTH_PASS:GLenum;readonly STENCIL_BACK_REF:GLenum;readonly STENCIL_BACK_VALUE_MASK:GLenum;readonly STENCIL_BACK_WRITEMASK:GLenum;readonly STENCIL_BITS:GLenum;readonly STENCIL_BUFFER_BIT:GLenum;readonly STENCIL_CLEAR_VALUE:GLenum;readonly STENCIL_FAIL:GLenum;readonly STENCIL_FUNC:GLenum;readonly STENCIL_INDEX8:GLenum;readonly STENCIL_PASS_DEPTH_FAIL:GLenum;readonly STENCIL_PASS_DEPTH_PASS:GLenum;readonly STENCIL_REF:GLenum;readonly STENCIL_TEST:GLenum;readonly STENCIL_VALUE_MASK:GLenum;readonly STENCIL_WRITEMASK:GLenum;readonly STREAM_DRAW:GLenum;readonly SUBPIXEL_BITS:GLenum;readonly TEXTURE:GLenum;readonly TEXTURE0:GLenum;readonly TEXTURE1:GLenum;readonly TEXTURE10:GLenum;readonly TEXTURE11:GLenum;readonly TEXTURE12:GLenum;readonly TEXTURE13:GLenum;readonly TEXTURE14:GLenum;readonly TEXTURE15:GLenum;readonly TEXTURE16:GLenum;readonly TEXTURE17:GLenum;readonly TEXTURE18:GLenum;readonly TEXTURE19:GLenum;readonly TEXTURE2:GLenum;readonly TEXTURE20:GLenum;readonly TEXTURE21:GLenum;readonly TEXTURE22:GLenum;readonly TEXTURE23:GLenum;readonly TEXTURE24:GLenum;readonly TEXTURE25:GLenum;readonly TEXTURE26:GLenum;readonly TEXTURE27:GLenum;readonly TEXTURE28:GLenum;readonly TEXTURE29:GLenum;readonly TEXTURE3:GLenum;readonly TEXTURE30:GLenum;readonly TEXTURE31:GLenum;readonly TEXTURE4:GLenum;readonly TEXTURE5:GLenum;readonly TEXTURE6:GLenum;readonly TEXTURE7:GLenum;readonly TEXTURE8:GLenum;readonly TEXTURE9:GLenum;readonly TEXTURE_2D:GLenum;readonly TEXTURE_BINDING_2D:GLenum;readonly TEXTURE_BINDING_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_NEGATIVE_Z:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_X:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Y:GLenum;readonly TEXTURE_CUBE_MAP_POSITIVE_Z:GLenum;readonly TEXTURE_MAG_FILTER:GLenum;readonly TEXTURE_MIN_FILTER:GLenum;readonly TEXTURE_WRAP_S:GLenum;readonly TEXTURE_WRAP_T:GLenum;readonly TRIANGLES:GLenum;readonly TRIANGLE_FAN:GLenum;readonly TRIANGLE_STRIP:GLenum;readonly UNPACK_ALIGNMENT:GLenum;readonly UNPACK_COLORSPACE_CONVERSION_WEBGL:GLenum;readonly UNPACK_FLIP_Y_WEBGL:GLenum;readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL:GLenum;readonly UNSIGNED_BYTE:GLenum;readonly UNSIGNED_INT:GLenum;readonly UNSIGNED_SHORT:GLenum;readonly UNSIGNED_SHORT_4_4_4_4:GLenum;readonly UNSIGNED_SHORT_5_5_5_1:GLenum;readonly UNSIGNED_SHORT_5_6_5:GLenum;readonly VALIDATE_STATUS:GLenum;readonly VENDOR:GLenum;readonly VERSION:GLenum;readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:GLenum;readonly VERTEX_ATTRIB_ARRAY_ENABLED:GLenum;readonly VERTEX_ATTRIB_ARRAY_NORMALIZED:GLenum;readonly VERTEX_ATTRIB_ARRAY_POINTER:GLenum;readonly VERTEX_ATTRIB_ARRAY_SIZE:GLenum;readonly VERTEX_ATTRIB_ARRAY_STRIDE:GLenum;readonly VERTEX_ATTRIB_ARRAY_TYPE:GLenum;readonly VERTEX_SHADER:GLenum;readonly VIEWPORT:GLenum;readonly ZERO:GLenum;}interface WebGLRenderingContextOverloads{bufferData(target:GLenum,size:GLsizeiptr,usage:GLenum):void;bufferData(target:GLenum,data:BufferSource|null,usage:GLenum):void;bufferSubData(target:GLenum,offset:GLintptr,data:BufferSource):void;compressedTexImage2D(target:GLenum,level:GLint,internalformat:GLenum,width:GLsizei,height:GLsizei,border:GLint,data:ArrayBufferView):void;compressedTexSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,data:ArrayBufferView):void;readPixels(x:GLint,y:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,pixels:ArrayBufferView|null):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,width:GLsizei,height:GLsizei,border:GLint,format:GLenum,type:GLenum,pixels:ArrayBufferView|null):void;texImage2D(target:GLenum,level:GLint,internalformat:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,width:GLsizei,height:GLsizei,format:GLenum,type:GLenum,pixels:ArrayBufferView|null):void;texSubImage2D(target:GLenum,level:GLint,xoffset:GLint,yoffset:GLint,format:GLenum,type:GLenum,source:TexImageSource):void;uniform1fv(location:WebGLUniformLocation|null,v:Float32List):void;uniform1iv(location:WebGLUniformLocation|null,v:Int32List):void;uniform2fv(location:WebGLUniformLocation|null,v:Float32List):void;uniform2iv(location:WebGLUniformLocation|null,v:Int32List):void;uniform3fv(location:WebGLUniformLocation|null,v:Float32List):void;uniform3iv(location:WebGLUniformLocation|null,v:Int32List):void;uniform4fv(location:WebGLUniformLocation|null,v:Float32List):void;uniform4iv(location:WebGLUniformLocation|null,v:Int32List):void;uniformMatrix2fv(location:WebGLUniformLocation|null,transpose:GLboolean,value:Float32List):void;uniformMatrix3fv(location:WebGLUniformLocation|null,transpose:GLboolean,value:Float32List):void;uniformMatrix4fv(location:WebGLUniformLocation|null,transpose:GLboolean,value:Float32List):void;}interface WebGLSampler extends WebGLObject{}declare var WebGLSampler:{prototype:WebGLSampler;new():WebGLSampler;};interface WebGLShader extends WebGLObject{}declare var WebGLShader:{prototype:WebGLShader;new():WebGLShader;};interface WebGLShaderPrecisionFormat{readonly precision:GLint;readonly rangeMax:GLint;readonly rangeMin:GLint;}declare var WebGLShaderPrecisionFormat:{prototype:WebGLShaderPrecisionFormat;new():WebGLShaderPrecisionFormat;};interface WebGLSync extends WebGLObject{}declare var WebGLSync:{prototype:WebGLSync;new():WebGLSync;};interface WebGLTexture extends WebGLObject{}declare var WebGLTexture:{prototype:WebGLTexture;new():WebGLTexture;};interface WebGLTransformFeedback extends WebGLObject{}declare var WebGLTransformFeedback:{prototype:WebGLTransformFeedback;new():WebGLTransformFeedback;};interface WebGLUniformLocation{}declare var WebGLUniformLocation:{prototype:WebGLUniformLocation;new():WebGLUniformLocation;};interface WebGLVertexArrayObject extends WebGLObject{}declare var WebGLVertexArrayObject:{prototype:WebGLVertexArrayObject;new():WebGLVertexArrayObject;};interface WebGLVertexArrayObjectOES extends WebGLObject{}interface WebSocketEventMap{"close":CloseEvent;"error":Event;"message":MessageEvent;"open":Event;}interface WebSocket extends EventTarget{binaryType:BinaryType;readonly bufferedAmount:number;readonly extensions:string;onclose:((this:WebSocket,ev:CloseEvent)=>any)|null;onerror:((this:WebSocket,ev:Event)=>any)|null;onmessage:((this:WebSocket,ev:MessageEvent)=>any)|null;onopen:((this:WebSocket,ev:Event)=>any)|null;readonly protocol:string;readonly readyState:number;readonly url:string;close(code?:number,reason?:string):void;send(data:string|ArrayBufferLike|Blob|ArrayBufferView):void;readonly CLOSED:number;readonly CLOSING:number;readonly CONNECTING:number;readonly OPEN:number;addEventListener<K extends keyof WebSocketEventMap>(type:K,listener:(this:WebSocket,ev:WebSocketEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof WebSocketEventMap>(type:K,listener:(this:WebSocket,ev:WebSocketEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var WebSocket:{prototype:WebSocket;new(url:string,protocols?:string|string[]):WebSocket;readonly CLOSED:number;readonly CLOSING:number;readonly CONNECTING:number;readonly OPEN:number;};interface WindowBase64{atob(encodedString:string):string;btoa(rawString:string):string;}interface WindowClient extends Client{readonly ancestorOrigins:ReadonlyArray<string>;readonly focused:boolean;readonly visibilityState:VisibilityState;focus():Promise<WindowClient>;navigate(url:string):Promise<WindowClient|null>;}declare var WindowClient:{prototype:WindowClient;new():WindowClient;};interface WindowConsole{readonly console:Console;}interface WindowOrWorkerGlobalScope{readonly caches:CacheStorage;readonly crypto:Crypto;readonly indexedDB:IDBFactory;readonly origin:string;readonly performance:Performance;atob(data:string):string;btoa(data:string):string;clearInterval(handle?:number):void;clearTimeout(handle?:number):void;createImageBitmap(image:ImageBitmapSource):Promise<ImageBitmap>;createImageBitmap(image:ImageBitmapSource,sx:number,sy:number,sw:number,sh:number):Promise<ImageBitmap>;fetch(input:RequestInfo,init?:RequestInit):Promise<Response>;queueMicrotask(callback:Function):void;setInterval(handler:TimerHandler,timeout?:number,...arguments:any[]):number;setTimeout(handler:TimerHandler,timeout?:number,...arguments:any[]):number;}interface WorkerEventMap extends AbstractWorkerEventMap{"message":MessageEvent;}interface Worker extends EventTarget,AbstractWorker{onmessage:((this:Worker,ev:MessageEvent)=>any)|null;postMessage(message:any,transfer:Transferable[]):void;postMessage(message:any,options?:PostMessageOptions):void;terminate():void;addEventListener<K extends keyof WorkerEventMap>(type:K,listener:(this:Worker,ev:WorkerEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof WorkerEventMap>(type:K,listener:(this:Worker,ev:WorkerEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var Worker:{prototype:Worker;new(stringUrl:string|URL,options?:WorkerOptions):Worker;};interface WorkerGlobalScopeEventMap{"error":ErrorEvent;}interface WorkerGlobalScope extends EventTarget,WindowConsole,WindowOrWorkerGlobalScope,WorkerUtils{readonly caches:CacheStorage;readonly isSecureContext:boolean;readonly location:WorkerLocation;onerror:((this:WorkerGlobalScope,ev:ErrorEvent)=>any)|null;readonly performance:Performance;readonly self:WorkerGlobalScope&typeof globalThis;msWriteProfilerMark(profilerMarkName:string):void;addEventListener<K extends keyof WorkerGlobalScopeEventMap>(type:K,listener:(this:WorkerGlobalScope,ev:WorkerGlobalScopeEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof WorkerGlobalScopeEventMap>(type:K,listener:(this:WorkerGlobalScope,ev:WorkerGlobalScopeEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var WorkerGlobalScope:{prototype:WorkerGlobalScope;new():WorkerGlobalScope;};interface WorkerLocation{readonly hash:string;readonly host:string;readonly hostname:string;readonly href:string;readonly origin:string;readonly pathname:string;readonly port:string;readonly protocol:string;readonly search:string;toString():string;}declare var WorkerLocation:{prototype:WorkerLocation;new():WorkerLocation;};interface WorkerNavigator extends NavigatorBeacon,NavigatorConcurrentHardware,NavigatorID,NavigatorOnLine,NavigatorStorage{readonly permissions:Permissions;readonly serviceWorker:ServiceWorkerContainer;}declare var WorkerNavigator:{prototype:WorkerNavigator;new():WorkerNavigator;};interface WorkerUtils extends WindowBase64{readonly indexedDB:IDBFactory;readonly msIndexedDB:IDBFactory;readonly navigator:WorkerNavigator;importScripts(...urls:string[]):void;}interface WritableStream<W=any>{readonly locked:boolean;abort(reason?:any):Promise<void>;getWriter():WritableStreamDefaultWriter<W>;}declare var WritableStream:{prototype:WritableStream;new<W=any>(underlyingSink?:UnderlyingSink<W>,strategy?:QueuingStrategy<W>):WritableStream<W>;};interface WritableStreamDefaultController{error(error?:any):void;}interface WritableStreamDefaultWriter<W=any>{readonly closed:Promise<void>;readonly desiredSize:number|null;readonly ready:Promise<void>;abort(reason?:any):Promise<void>;close():Promise<void>;releaseLock():void;write(chunk:W):Promise<void>;}interface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap{"readystatechange":Event;}interface XMLHttpRequest extends XMLHttpRequestEventTarget{onreadystatechange:((this:XMLHttpRequest,ev:Event)=>any)|null;readonly readyState:number;readonly response:any;readonly responseText:string;responseType:XMLHttpRequestResponseType;readonly responseURL:string;readonly status:number;readonly statusText:string;timeout:number;readonly upload:XMLHttpRequestUpload;withCredentials:boolean;abort():void;getAllResponseHeaders():string;getResponseHeader(name:string):string|null;open(method:string,url:string):void;open(method:string,url:string,async:boolean,username?:string|null,password?:string|null):void;overrideMimeType(mime:string):void;send(body?:BodyInit|null):void;setRequestHeader(name:string,value:string):void;readonly DONE:number;readonly HEADERS_RECEIVED:number;readonly LOADING:number;readonly OPENED:number;readonly UNSENT:number;addEventListener<K extends keyof XMLHttpRequestEventMap>(type:K,listener:(this:XMLHttpRequest,ev:XMLHttpRequestEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof XMLHttpRequestEventMap>(type:K,listener:(this:XMLHttpRequest,ev:XMLHttpRequestEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var XMLHttpRequest:{prototype:XMLHttpRequest;new():XMLHttpRequest;readonly DONE:number;readonly HEADERS_RECEIVED:number;readonly LOADING:number;readonly OPENED:number;readonly UNSENT:number;};interface XMLHttpRequestEventTargetEventMap{"abort":ProgressEvent<XMLHttpRequestEventTarget>;"error":ProgressEvent<XMLHttpRequestEventTarget>;"load":ProgressEvent<XMLHttpRequestEventTarget>;"loadend":ProgressEvent<XMLHttpRequestEventTarget>;"loadstart":ProgressEvent<XMLHttpRequestEventTarget>;"progress":ProgressEvent<XMLHttpRequestEventTarget>;"timeout":ProgressEvent<XMLHttpRequestEventTarget>;}interface XMLHttpRequestEventTarget extends EventTarget{onabort:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;onerror:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;onload:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;onloadend:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;onloadstart:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;onprogress:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;ontimeout:((this:XMLHttpRequest,ev:ProgressEvent)=>any)|null;addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type:K,listener:(this:XMLHttpRequestEventTarget,ev:XMLHttpRequestEventTargetEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type:K,listener:(this:XMLHttpRequestEventTarget,ev:XMLHttpRequestEventTargetEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var XMLHttpRequestEventTarget:{prototype:XMLHttpRequestEventTarget;new():XMLHttpRequestEventTarget;};interface XMLHttpRequestUpload extends XMLHttpRequestEventTarget{addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type:K,listener:(this:XMLHttpRequestUpload,ev:XMLHttpRequestEventTargetEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type:K,listener:(this:XMLHttpRequestUpload,ev:XMLHttpRequestEventTargetEventMap[K])=>any,options?:boolean|EventListenerOptions):void;removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;}declare var XMLHttpRequestUpload:{prototype:XMLHttpRequestUpload;new():XMLHttpRequestUpload;};declare type EventListenerOrEventListenerObject=EventListener|EventListenerObject;declare namespace WebAssembly{interface Global{value:any;valueOf():any;}var Global:{prototype:Global;new(descriptor:GlobalDescriptor,v?:any):Global;};interface Instance{readonly exports:Exports;}var Instance:{prototype:Instance;new(module:Module,importObject?:Imports):Instance;};interface Memory{readonly buffer:ArrayBuffer;grow(delta:number):number;}var Memory:{prototype:Memory;new(descriptor:MemoryDescriptor):Memory;};interface Module{}var Module:{prototype:Module;new(bytes:BufferSource):Module;customSections(moduleObject:Module,sectionName:string):ArrayBuffer[];exports(moduleObject:Module):ModuleExportDescriptor[];imports(moduleObject:Module):ModuleImportDescriptor[];};interface Table{readonly length:number;get(index:number):Function|null;grow(delta:number):number;set(index:number,value:Function|null):void;}var Table:{prototype:Table;new(descriptor:TableDescriptor):Table;};interface GlobalDescriptor{mutable?:boolean;value:ValueType;}interface MemoryDescriptor{initial:number;maximum?:number;}interface ModuleExportDescriptor{kind:ImportExportKind;name:string;}interface ModuleImportDescriptor{kind:ImportExportKind;module:string;name:string;}interface TableDescriptor{element:TableKind;initial:number;maximum?:number;}interface WebAssemblyInstantiatedSource{instance:Instance;module:Module;}type ImportExportKind="function"|"table"|"memory"|"global";type TableKind="anyfunc";type ValueType="i32"|"i64"|"f32"|"f64";type ExportValue=Function|Global|Memory|Table;type Exports=Record<string,ExportValue>;type ImportValue=ExportValue|number;type ModuleImports=Record<string,ImportValue>;type Imports=Record<string,ModuleImports>;function compile(bytes:BufferSource):Promise<Module>;function compileStreaming(source:Response|Promise<Response>):Promise<Module>;function instantiate(bytes:BufferSource,importObject?:Imports):Promise<WebAssemblyInstantiatedSource>;function instantiate(moduleObject:Module,importObject?:Imports):Promise<Instance>;function instantiateStreaming(response:Response|PromiseLike<Response>,importObject?:Imports):Promise<WebAssemblyInstantiatedSource>;function validate(bytes:BufferSource):boolean;}interface EventHandlerNonNull{(event:Event):any;}interface FrameRequestCallback{(time:number):void;}interface PerformanceObserverCallback{(entries:PerformanceObserverEntryList,observer:PerformanceObserver):void;}interface QueuingStrategySizeCallback<T=any>{(chunk:T):number;}interface ReadableByteStreamControllerCallback{(controller:ReadableByteStreamController):void|PromiseLike<void>;}interface ReadableStreamDefaultControllerCallback<R>{(controller:ReadableStreamDefaultController<R>):void|PromiseLike<void>;}interface ReadableStreamErrorCallback{(reason:any):void|PromiseLike<void>;}interface TransformStreamDefaultControllerCallback<O>{(controller:TransformStreamDefaultController<O>):void|PromiseLike<void>;}interface TransformStreamDefaultControllerTransformCallback<I,O>{(chunk:I,controller:TransformStreamDefaultController<O>):void|PromiseLike<void>;}interface WritableStreamDefaultControllerCloseCallback{():void|PromiseLike<void>;}interface WritableStreamDefaultControllerStartCallback{(controller:WritableStreamDefaultController):void|PromiseLike<void>;}interface WritableStreamDefaultControllerWriteCallback<W>{(chunk:W,controller:WritableStreamDefaultController):void|PromiseLike<void>;}interface WritableStreamErrorCallback{(reason:any):void|PromiseLike<void>;}declare var onmessage:((this:DedicatedWorkerGlobalScope,ev:MessageEvent)=>any)|null;declare function close():void;declare function postMessage(message:any,transfer:Transferable[]):void;declare function postMessage(message:any,options?:PostMessageOptions):void;declare function dispatchEvent(event:Event):boolean;declare var caches:CacheStorage;declare var isSecureContext:boolean;declare var location:WorkerLocation;declare var onerror:((this:DedicatedWorkerGlobalScope,ev:ErrorEvent)=>any)|null;declare var performance:Performance;declare var self:WorkerGlobalScope&typeof globalThis;declare function msWriteProfilerMark(profilerMarkName:string):void;declare function dispatchEvent(event:Event):boolean;declare var indexedDB:IDBFactory;declare var msIndexedDB:IDBFactory;declare var navigator:WorkerNavigator;declare function importScripts(...urls:string[]):void;declare function atob(encodedString:string):string;declare function btoa(rawString:string):string;declare var console:Console;declare var caches:CacheStorage;declare var crypto:Crypto;declare var indexedDB:IDBFactory;declare var origin:string;declare var performance:Performance;declare function atob(data:string):string;declare function btoa(data:string):string;declare function clearInterval(handle?:number):void;declare function clearTimeout(handle?:number):void;declare function createImageBitmap(image:ImageBitmapSource):Promise<ImageBitmap>;declare function createImageBitmap(image:ImageBitmapSource,sx:number,sy:number,sw:number,sh:number):Promise<ImageBitmap>;declare function fetch(input:RequestInfo,init?:RequestInit):Promise<Response>;declare function queueMicrotask(callback:Function):void;declare function setInterval(handler:TimerHandler,timeout?:number,...arguments:any[]):number;declare function setTimeout(handler:TimerHandler,timeout?:number,...arguments:any[]):number;declare function cancelAnimationFrame(handle:number):void;declare function requestAnimationFrame(callback:FrameRequestCallback):number;declare function addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type:K,listener:(this:DedicatedWorkerGlobalScope,ev:DedicatedWorkerGlobalScopeEventMap[K])=>any,options?:boolean|AddEventListenerOptions):void;declare function addEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|AddEventListenerOptions):void;declare function removeEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type:K,listener:(this:DedicatedWorkerGlobalScope,ev:DedicatedWorkerGlobalScopeEventMap[K])=>any,options?:boolean|EventListenerOptions):void;declare function removeEventListener(type:string,listener:EventListenerOrEventListenerObject,options?:boolean|EventListenerOptions):void;type HeadersInit=Headers|string[][]|Record<string,string>;type BodyInit=Blob|BufferSource|FormData|URLSearchParams|ReadableStream<Uint8Array>|string;type RequestInfo=Request|string;type BlobPart=BufferSource|Blob|string;type DOMHighResTimeStamp=number;type CanvasImageSource=ImageBitmap|OffscreenCanvas;type OffscreenRenderingContext=OffscreenCanvasRenderingContext2D|ImageBitmapRenderingContext|WebGLRenderingContext|WebGL2RenderingContext;type MessageEventSource=MessagePort|ServiceWorker;type ImageBitmapSource=CanvasImageSource|Blob|ImageData;type TimerHandler=string|Function;type PerformanceEntryList=PerformanceEntry[];type PushMessageDataInit=BufferSource|string;type VibratePattern=number|number[];type AlgorithmIdentifier=string|Algorithm;type HashAlgorithmIdentifier=AlgorithmIdentifier;type BigInteger=Uint8Array;type NamedCurve=string;type GLenum=number;type GLboolean=boolean;type GLbitfield=number;type GLint=number;type GLsizei=number;type GLintptr=number;type GLsizeiptr=number;type GLuint=number;type GLfloat=number;type GLclampf=number;type TexImageSource=ImageBitmap|ImageData|OffscreenCanvas;type Float32List=Float32Array|GLfloat[];type Int32List=Int32Array|GLint[];type GLint64=number;type GLuint64=number;type Uint32List=Uint32Array|GLuint[];type BufferSource=ArrayBufferView|ArrayBuffer;type DOMTimeStamp=number;type FormDataEntryValue=File|string;type IDBValidKey=number|string|Date|BufferSource|IDBArrayKey;type Transferable=ArrayBuffer|MessagePort|ImageBitmap;type BinaryType="blob"|"arraybuffer";type CanvasDirection="ltr"|"rtl"|"inherit";type CanvasFillRule="nonzero"|"evenodd";type CanvasLineCap="butt"|"round"|"square";type CanvasLineJoin="round"|"bevel"|"miter";type CanvasTextAlign="start"|"end"|"left"|"right"|"center";type CanvasTextBaseline="top"|"hanging"|"middle"|"alphabetic"|"ideographic"|"bottom";type ClientTypes="window"|"worker"|"sharedworker"|"all";type EndingType="transparent"|"native";type FrameType="auxiliary"|"top-level"|"nested"|"none";type IDBCursorDirection="next"|"nextunique"|"prev"|"prevunique";type IDBRequestReadyState="pending"|"done";type IDBTransactionMode="readonly"|"readwrite"|"versionchange";type ImageSmoothingQuality="low"|"medium"|"high";type KeyFormat="raw"|"spki"|"pkcs8"|"jwk";type KeyType="public"|"private"|"secret";type KeyUsage="encrypt"|"decrypt"|"sign"|"verify"|"deriveKey"|"deriveBits"|"wrapKey"|"unwrapKey";type NotificationDirection="auto"|"ltr"|"rtl";type NotificationPermission="default"|"denied"|"granted";type OffscreenRenderingContextId="2d"|"bitmaprenderer"|"webgl"|"webgl2";type PermissionName="geolocation"|"notifications"|"push"|"midi"|"camera"|"microphone"|"speaker"|"device-info"|"background-sync"|"bluetooth"|"persistent-storage"|"ambient-light-sensor"|"accelerometer"|"gyroscope"|"magnetometer"|"clipboard";type PermissionState="granted"|"denied"|"prompt";type PushEncryptionKeyName="p256dh"|"auth";type PushPermissionState="denied"|"granted"|"prompt";type ReferrerPolicy=""|"no-referrer"|"no-referrer-when-downgrade"|"same-origin"|"origin"|"strict-origin"|"origin-when-cross-origin"|"strict-origin-when-cross-origin"|"unsafe-url";type RequestCache="default"|"no-store"|"reload"|"no-cache"|"force-cache"|"only-if-cached";type RequestCredentials="omit"|"same-origin"|"include";type RequestDestination=""|"audio"|"audioworklet"|"document"|"embed"|"font"|"image"|"manifest"|"object"|"paintworklet"|"report"|"script"|"sharedworker"|"style"|"track"|"video"|"worker"|"xslt";type RequestMode="navigate"|"same-origin"|"no-cors"|"cors";type RequestRedirect="follow"|"error"|"manual";type ResponseType="basic"|"cors"|"default"|"error"|"opaque"|"opaqueredirect";type ServiceWorkerState="installing"|"installed"|"activating"|"activated"|"redundant";type ServiceWorkerUpdateViaCache="imports"|"all"|"none";type VisibilityState="hidden"|"visible";type WebGLPowerPreference="default"|"low-power"|"high-performance";type WorkerType="classic"|"module";type XMLHttpRequestResponseType=""|"arraybuffer"|"blob"|"document"|"json"|"text";`
};