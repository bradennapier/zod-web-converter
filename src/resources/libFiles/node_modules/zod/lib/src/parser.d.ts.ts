export default {
    fileName: `/node_modules/zod/lib/src/parser.d.ts`,
    // File text is copyright Microsoft Corporation and is distributed under the Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)
    text: `import*as z from'./types/base';import{ZodSuberrorOptionalMessage}from'./ZodError';import{util}from'./helpers/util';import{ZodErrorMap}from'./defaultErrorMap';export declare type ParseParams={seen?:{schema:any;objects:any[];}[];path?:(string|number)[];errorMap?:ZodErrorMap;};export declare const getParsedType:(data:any)=>"object"|"symbol"|"unknown"|"string"|"number"|"integer"|"nan"|"boolean"|"date"|"bigint"|"function"|"undefined"|"null"|"array"|"promise"|"void";export declare const ZodParsedType:{object:"object";symbol:"symbol";unknown:"unknown";string:"string";number:"number";integer:"integer";nan:"nan";boolean:"boolean";date:"date";bigint:"bigint";function:"function";undefined:"undefined";null:"null";array:"array";promise:"promise";void:"void";};export declare type ZodParsedType=keyof typeof ZodParsedType;declare type stripPath<T extends object>=T extends any?util.OmitKeys<T,'path'>:never;export declare type MakeErrorData=stripPath<ZodSuberrorOptionalMessage>&{path?:(string|number)[];};export declare const ZodParser:(schemaDef:z.ZodTypeDef)=>(obj:any,baseParams?:ParseParams)=>any;export{};`
};